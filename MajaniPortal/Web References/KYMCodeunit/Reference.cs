//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MajaniPortal.KYMCodeunit {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="KYM_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/KYM")]
    public partial class KYM : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NewClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewMotorClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewClientApplicationsCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewCorporateClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewCorporateClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewMotorCorporateClientOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClientDependantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPolicyAmmendmentscreCreateClientDependantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatePolicyDependantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClientBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateClientBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreatePolicytBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnupdatePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIndividualupdatePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIndividualMotorupdatePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendClientApplicationForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClaimNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FncreateClaimNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushClaimNotificationForValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushMotorClaimNotificationForValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMicroInsurancePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushAmmendmentsClaimNotificationForValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPolicyAmmendmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorPolicyAmmendmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorPolicyRieskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorIndividualPolicyRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExistingMicroInsuranceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExistingMicroInsuranceBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExistingMotorUnderWritingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppSendStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback PromotetoBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PromotetoBeneficiaryPolicyAmmendmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientPolicyAmendmentsBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientBeneficiaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientDependantOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientPolicyAmendmentssDependantOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIndividualClientApplicationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIndividualKYMPolicyAmmendmentApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewBCCAgentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateAgentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetFactoryCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetFactoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddPrincipalMemberConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDependantConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveDependantConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInsuranceOptionalBenefitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInsuranceExistingOptionalBenefitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckifGrowerNoExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckifIdentityNoExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckifICertifcateNumberExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPolicyEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPolicyCalenderDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPolicyAmmendmentsDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateClaimValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPolicyAmmendmentscorporateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPolicyAmmendmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDocumentsValidationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPolicyAmmendmentsUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorPolicyAmmendmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorIndividualPolicyRenewalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateMotorIndividualPolicySumInsuredOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQuoteRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateMotorClaimNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateClaimMotorValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMotoRenewalIndividualClientApplicationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewMotorPolicyExistingBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIndividualMotorupdatePolicyExistingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMotorPolicyAmmendmentsUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeactivateQuoteRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDebitNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRiskNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetBasicPremiumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetBasicPremiumQuotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnKYMWithdrawalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMotorGeneralDetailsExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMotorExtensionVehicleDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTransferRiskDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIndividualMotorAmmendmentApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCustomersListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCustomerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetServiceContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetKTDAFarmersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnComputeKymPremiumOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPrinciplePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertDependentPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewAgricultureOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnIndividualupdateAgriculturePolicyDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsterAgricultureDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendIndividualAgricultureApplicationApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnewAgricultureCorpOnboadingRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetServiceContractsAgricultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPolicyAmmendmentsIndAgricOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAmmendCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAgentsRegReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateKYMNewApkReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateUpgradeReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratClaimReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateClientCertificateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public KYM() {
            this.Url = global::MajaniPortal.Properties.Settings.Default.MajaniPortal_KYMCodeunit_KYM;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NewClientOnboadingRequestsCompletedEventHandler NewClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnewClientOnboadingRequestsCompletedEventHandler FnewClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnewMotorClientOnboadingRequestsCompletedEventHandler FnewMotorClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnewClientApplicationsCommunicationDetailsCompletedEventHandler FnewClientApplicationsCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event NewCorporateClientOnboadingRequestsCompletedEventHandler NewCorporateClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnewCorporateClientOnboadingRequestsCompletedEventHandler FnewCorporateClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnewMotorCorporateClientOnboadingRequestsCompletedEventHandler FnewMotorCorporateClientOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event CreateClientDependantsCompletedEventHandler CreateClientDependantsCompleted;
        
        /// <remarks/>
        public event FnPolicyAmmendmentscreCreateClientDependantsCompletedEventHandler FnPolicyAmmendmentscreCreateClientDependantsCompleted;
        
        /// <remarks/>
        public event FnCreatePolicyDependantsCompletedEventHandler FnCreatePolicyDependantsCompleted;
        
        /// <remarks/>
        public event CreateClientBeneficiaryCompletedEventHandler CreateClientBeneficiaryCompleted;
        
        /// <remarks/>
        public event FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventHandler FnPolicyAmmendmentsCreateClientBeneficiaryCompleted;
        
        /// <remarks/>
        public event ValidateClientBeneficiaryCompletedEventHandler ValidateClientBeneficiaryCompleted;
        
        /// <remarks/>
        public event FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventHandler FnValidateClientBeneficiaryPolicyAmmendmentsCompleted;
        
        /// <remarks/>
        public event FnCreatePolicytBeneficiaryCompletedEventHandler FnCreatePolicytBeneficiaryCompleted;
        
        /// <remarks/>
        public event UpdatePolicyDetailsCompletedEventHandler UpdatePolicyDetailsCompleted;
        
        /// <remarks/>
        public event FnupdatePolicyDetailsCompletedEventHandler FnupdatePolicyDetailsCompleted;
        
        /// <remarks/>
        public event FnIndividualupdatePolicyDetailsCompletedEventHandler FnIndividualupdatePolicyDetailsCompleted;
        
        /// <remarks/>
        public event FnIndividualMotorupdatePolicyDetailsCompletedEventHandler FnIndividualMotorupdatePolicyDetailsCompleted;
        
        /// <remarks/>
        public event FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventHandler FnIndividualMotorupdatePolicyAmmendmentDetailsCompleted;
        
        /// <remarks/>
        public event SendClientApplicationForApprovalCompletedEventHandler SendClientApplicationForApprovalCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event CreateClaimNotificationCompletedEventHandler CreateClaimNotificationCompleted;
        
        /// <remarks/>
        public event FncreateClaimNotificationCompletedEventHandler FncreateClaimNotificationCompleted;
        
        /// <remarks/>
        public event PushClaimNotificationForValidationCompletedEventHandler PushClaimNotificationForValidationCompleted;
        
        /// <remarks/>
        public event PushMotorClaimNotificationForValidationCompletedEventHandler PushMotorClaimNotificationForValidationCompleted;
        
        /// <remarks/>
        public event FnNewMicroInsurancePolicyCompletedEventHandler FnNewMicroInsurancePolicyCompleted;
        
        /// <remarks/>
        public event PushAmmendmentsClaimNotificationForValidationCompletedEventHandler PushAmmendmentsClaimNotificationForValidationCompleted;
        
        /// <remarks/>
        public event FnNewPolicyAmmendmentCompletedEventHandler FnNewPolicyAmmendmentCompleted;
        
        /// <remarks/>
        public event FnNewMotorPolicyAmmendmentCompletedEventHandler FnNewMotorPolicyAmmendmentCompleted;
        
        /// <remarks/>
        public event FnNewMotorPolicyRieskDetailsCompletedEventHandler FnNewMotorPolicyRieskDetailsCompleted;
        
        /// <remarks/>
        public event FnNewMotorIndividualPolicyRiskDetailsCompletedEventHandler FnNewMotorIndividualPolicyRiskDetailsCompleted;
        
        /// <remarks/>
        public event FnExistingMicroInsuranceDetailsCompletedEventHandler FnExistingMicroInsuranceDetailsCompleted;
        
        /// <remarks/>
        public event FnExistingMicroInsuranceBeneficiaryCompletedEventHandler FnExistingMicroInsuranceBeneficiaryCompleted;
        
        /// <remarks/>
        public event FnExistingMotorUnderWritingDetailsCompletedEventHandler FnExistingMotorUnderWritingDetailsCompleted;
        
        /// <remarks/>
        public event AppSendStatementCompletedEventHandler AppSendStatementCompleted;
        
        /// <remarks/>
        public event PromotetoBeneficiaryCompletedEventHandler PromotetoBeneficiaryCompleted;
        
        /// <remarks/>
        public event PromotetoBeneficiaryPolicyAmmendmentsCompletedEventHandler PromotetoBeneficiaryPolicyAmmendmentsCompleted;
        
        /// <remarks/>
        public event DeleteClientPolicyAmendmentsBeneficiaryCompletedEventHandler DeleteClientPolicyAmendmentsBeneficiaryCompleted;
        
        /// <remarks/>
        public event DeleteClientBeneficiaryCompletedEventHandler DeleteClientBeneficiaryCompleted;
        
        /// <remarks/>
        public event DeleteClientRiskDetailsCompletedEventHandler DeleteClientRiskDetailsCompleted;
        
        /// <remarks/>
        public event DeleteClientDependantCompletedEventHandler DeleteClientDependantCompleted;
        
        /// <remarks/>
        public event DeleteClientPolicyAmendmentssDependantCompletedEventHandler DeleteClientPolicyAmendmentssDependantCompleted;
        
        /// <remarks/>
        public event SendIndividualClientApplicationApprovalCompletedEventHandler SendIndividualClientApplicationApprovalCompleted;
        
        /// <remarks/>
        public event SendIndividualKYMPolicyAmmendmentApprovalCompletedEventHandler SendIndividualKYMPolicyAmmendmentApprovalCompleted;
        
        /// <remarks/>
        public event FnNewBCCAgentDetailsCompletedEventHandler FnNewBCCAgentDetailsCompleted;
        
        /// <remarks/>
        public event FnCreateAgentDetailsCompletedEventHandler FnCreateAgentDetailsCompleted;
        
        /// <remarks/>
        public event FnGetFactoryCodeCompletedEventHandler FnGetFactoryCodeCompleted;
        
        /// <remarks/>
        public event FnGetFactoryNameCompletedEventHandler FnGetFactoryNameCompleted;
        
        /// <remarks/>
        public event FnAddPrincipalMemberConditionsCompletedEventHandler FnAddPrincipalMemberConditionsCompleted;
        
        /// <remarks/>
        public event FnAddDependantConditionsCompletedEventHandler FnAddDependantConditionsCompleted;
        
        /// <remarks/>
        public event RemoveDependantConditionsCompletedEventHandler RemoveDependantConditionsCompleted;
        
        /// <remarks/>
        public event FnAddInsuranceOptionalBenefitsCompletedEventHandler FnAddInsuranceOptionalBenefitsCompleted;
        
        /// <remarks/>
        public event FnAddInsuranceExistingOptionalBenefitsCompletedEventHandler FnAddInsuranceExistingOptionalBenefitsCompleted;
        
        /// <remarks/>
        public event FnCheckifGrowerNoExistCompletedEventHandler FnCheckifGrowerNoExistCompleted;
        
        /// <remarks/>
        public event FnCheckifIdentityNoExistCompletedEventHandler FnCheckifIdentityNoExistCompleted;
        
        /// <remarks/>
        public event FnCheckifICertifcateNumberExistCompletedEventHandler FnCheckifICertifcateNumberExistCompleted;
        
        /// <remarks/>
        public event FnGetPolicyEndDateCompletedEventHandler FnGetPolicyEndDateCompleted;
        
        /// <remarks/>
        public event FnGetPolicyCalenderDaysCompletedEventHandler FnGetPolicyCalenderDaysCompleted;
        
        /// <remarks/>
        public event FnPolicyAmmendmentsDetailsCompletedEventHandler FnPolicyAmmendmentsDetailsCompleted;
        
        /// <remarks/>
        public event FnCreateClaimValidationCompletedEventHandler FnCreateClaimValidationCompleted;
        
        /// <remarks/>
        public event FnNewPolicyAmmendmentscorporateCompletedEventHandler FnNewPolicyAmmendmentscorporateCompleted;
        
        /// <remarks/>
        public event FnNewPolicyAmmendmentsCompletedEventHandler FnNewPolicyAmmendmentsCompleted;
        
        /// <remarks/>
        public event FnDocumentsValidationsCompletedEventHandler FnDocumentsValidationsCompleted;
        
        /// <remarks/>
        public event FnPolicyAmmendmentsUpdatesCompletedEventHandler FnPolicyAmmendmentsUpdatesCompleted;
        
        /// <remarks/>
        public event FnNewMotorPolicyAmmendmentsCompletedEventHandler FnNewMotorPolicyAmmendmentsCompleted;
        
        /// <remarks/>
        public event FnNewMotorIndividualPolicyRenewalsCompletedEventHandler FnNewMotorIndividualPolicyRenewalsCompleted;
        
        /// <remarks/>
        public event FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventHandler FnNewQuoteMotorIndividualPolicyRiskDetailsCompleted;
        
        /// <remarks/>
        public event FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventHandler FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompleted;
        
        /// <remarks/>
        public event FnUpdateMotorIndividualPolicySumInsuredCompletedEventHandler FnUpdateMotorIndividualPolicySumInsuredCompleted;
        
        /// <remarks/>
        public event DeleteQuoteRiskDetailsCompletedEventHandler DeleteQuoteRiskDetailsCompleted;
        
        /// <remarks/>
        public event FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventHandler FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompleted;
        
        /// <remarks/>
        public event FnCreateMotorClaimNotificationCompletedEventHandler FnCreateMotorClaimNotificationCompleted;
        
        /// <remarks/>
        public event FnCreateClaimMotorValidationCompletedEventHandler FnCreateClaimMotorValidationCompleted;
        
        /// <remarks/>
        public event SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventHandler SendMotorAmmendmentIndividualClientApplicationApprovalCompleted;
        
        /// <remarks/>
        public event SendMotoRenewalIndividualClientApplicationApprovalCompletedEventHandler SendMotoRenewalIndividualClientApplicationApprovalCompleted;
        
        /// <remarks/>
        public event FnNewMotorPolicyExistingBusinessCompletedEventHandler FnNewMotorPolicyExistingBusinessCompleted;
        
        /// <remarks/>
        public event FnIndividualMotorupdatePolicyExistingDetailsCompletedEventHandler FnIndividualMotorupdatePolicyExistingDetailsCompleted;
        
        /// <remarks/>
        public event FnMotorPolicyAmmendmentsUpdatesCompletedEventHandler FnMotorPolicyAmmendmentsUpdatesCompleted;
        
        /// <remarks/>
        public event FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventHandler FnMotorPolicyAmmendmentsContactsUpdatesCompleted;
        
        /// <remarks/>
        public event DeactivateQuoteRiskDetailsCompletedEventHandler DeactivateQuoteRiskDetailsCompleted;
        
        /// <remarks/>
        public event GenerateDebitNoteCompletedEventHandler GenerateDebitNoteCompleted;
        
        /// <remarks/>
        public event GenerateRiskNoteCompletedEventHandler GenerateRiskNoteCompleted;
        
        /// <remarks/>
        public event FnGetBasicPremiumCompletedEventHandler FnGetBasicPremiumCompleted;
        
        /// <remarks/>
        public event FnGetBasicPremiumQuotesCompletedEventHandler FnGetBasicPremiumQuotesCompleted;
        
        /// <remarks/>
        public event FnKYMWithdrawalCompletedEventHandler FnKYMWithdrawalCompleted;
        
        /// <remarks/>
        public event FnMotorGeneralDetailsExtensionCompletedEventHandler FnMotorGeneralDetailsExtensionCompleted;
        
        /// <remarks/>
        public event FnMotorExtensionVehicleDetailsCompletedEventHandler FnMotorExtensionVehicleDetailsCompleted;
        
        /// <remarks/>
        public event FnTransferRiskDetailsCompletedEventHandler FnTransferRiskDetailsCompleted;
        
        /// <remarks/>
        public event SendIndividualMotorAmmendmentApprovalCompletedEventHandler SendIndividualMotorAmmendmentApprovalCompleted;
        
        /// <remarks/>
        public event FnGetCustomersListCompletedEventHandler FnGetCustomersListCompleted;
        
        /// <remarks/>
        public event FnCustomerListCompletedEventHandler FnCustomerListCompleted;
        
        /// <remarks/>
        public event FnGetServiceContractsCompletedEventHandler FnGetServiceContractsCompleted;
        
        /// <remarks/>
        public event FnGetKTDAFarmersCompletedEventHandler FnGetKTDAFarmersCompleted;
        
        /// <remarks/>
        public event FnComputeKymPremiumCompletedEventHandler FnComputeKymPremiumCompleted;
        
        /// <remarks/>
        public event FnInsertPrinciplePhotoCompletedEventHandler FnInsertPrinciplePhotoCompleted;
        
        /// <remarks/>
        public event FnInsertDependentPhotoCompletedEventHandler FnInsertDependentPhotoCompleted;
        
        /// <remarks/>
        public event FnewAgricultureOnboadingRequestsCompletedEventHandler FnewAgricultureOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnIndividualupdateAgriculturePolicyDetailsCompletedEventHandler FnIndividualupdateAgriculturePolicyDetailsCompleted;
        
        /// <remarks/>
        public event FnInsterAgricultureDetailsCompletedEventHandler FnInsterAgricultureDetailsCompleted;
        
        /// <remarks/>
        public event FnGenerateReportCompletedEventHandler FnGenerateReportCompleted;
        
        /// <remarks/>
        public event SendIndividualAgricultureApplicationApprovalCompletedEventHandler SendIndividualAgricultureApplicationApprovalCompleted;
        
        /// <remarks/>
        public event FnewAgricultureCorpOnboadingRequestsCompletedEventHandler FnewAgricultureCorpOnboadingRequestsCompleted;
        
        /// <remarks/>
        public event FnGetServiceContractsAgricultureCompletedEventHandler FnGetServiceContractsAgricultureCompleted;
        
        /// <remarks/>
        public event FnNewPolicyAmmendmentsIndAgricCompletedEventHandler FnNewPolicyAmmendmentsIndAgricCompleted;
        
        /// <remarks/>
        public event FnAmmendCommunicationDetailsCompletedEventHandler FnAmmendCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event FnGenerateAgentsRegReportCompletedEventHandler FnGenerateAgentsRegReportCompleted;
        
        /// <remarks/>
        public event FnGenerateKYMNewApkReportCompletedEventHandler FnGenerateKYMNewApkReportCompleted;
        
        /// <remarks/>
        public event FnGenerateUpgradeReportCompletedEventHandler FnGenerateUpgradeReportCompleted;
        
        /// <remarks/>
        public event FnGeneratClaimReportCompletedEventHandler FnGeneratClaimReportCompleted;
        
        /// <remarks/>
        public event FnGenerateCertificateCompletedEventHandler FnGenerateCertificateCompleted;
        
        /// <remarks/>
        public event FnGenerateClientCertificateCompletedEventHandler FnGenerateClientCertificateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:NewClientOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="NewClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    string nationality, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    string county, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus, 
                    string applicanttype) {
            object[] results = this.Invoke("NewClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        nationality,
                        dOB,
                        gender,
                        countyCode,
                        county,
                        maritalStatus,
                        hudumaNo,
                        mpesaNo,
                        tel_mobileNo,
                        tel_mobileNo2,
                        email,
                        postCode,
                        address,
                        city,
                        facebook,
                        twitter,
                        linkedIn,
                        googlePlus,
                        applicanttype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    string nationality, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    string county, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus, 
                    string applicanttype) {
            this.NewClientOnboadingRequestsAsync(docNo, empNo, cust_category, business_type, policyType, id_Type, id_passport, pinNo, title, firstName, middleName, lastname, countryOfResidence, nationality, dOB, gender, countyCode, county, maritalStatus, hudumaNo, mpesaNo, tel_mobileNo, tel_mobileNo2, email, postCode, address, city, facebook, twitter, linkedIn, googlePlus, applicanttype, null);
        }
        
        /// <remarks/>
        public void NewClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    string nationality, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    string county, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus, 
                    string applicanttype, 
                    object userState) {
            if ((this.NewClientOnboadingRequestsOperationCompleted == null)) {
                this.NewClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("NewClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        nationality,
                        dOB,
                        gender,
                        countyCode,
                        county,
                        maritalStatus,
                        hudumaNo,
                        mpesaNo,
                        tel_mobileNo,
                        tel_mobileNo2,
                        email,
                        postCode,
                        address,
                        city,
                        facebook,
                        twitter,
                        linkedIn,
                        googlePlus,
                        applicanttype}, this.NewClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnNewClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.NewClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewClientOnboadingRequestsCompleted(this, new NewClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewClientOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo) {
            object[] results = this.Invoke("FnewClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo) {
            this.FnewClientOnboadingRequestsAsync(docNo, empNo, cust_category, cust_sub_category, business_type, policyType, id_Type, id_passport, pinNo, title, firstName, middleName, lastname, countryOfResidence, dOB, gender, countyCode, maritalStatus, hudumaNo, applicanttype, occupation, growerapplicanttype, growerNumber, factoryCode, factoryName, financier, hasgrowerNo, null);
        }
        
        /// <remarks/>
        public void FnewClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    object userState) {
            if ((this.FnewClientOnboadingRequestsOperationCompleted == null)) {
                this.FnewClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo}, this.FnewClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewClientOnboadingRequestsCompleted(this, new FnewClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewMotorClientOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewMotorClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewMotorClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string officelocation, 
                    string residentialocation) {
            object[] results = this.Invoke("FnewMotorClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo,
                        officelocation,
                        residentialocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewMotorClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string officelocation, 
                    string residentialocation) {
            this.FnewMotorClientOnboadingRequestsAsync(docNo, empNo, cust_category, business_type, policyType, id_Type, id_passport, pinNo, title, firstName, middleName, lastname, countryOfResidence, dOB, gender, countyCode, maritalStatus, hudumaNo, applicanttype, occupation, growerapplicanttype, growerNumber, factoryCode, factoryName, financier, hasgrowerNo, officelocation, residentialocation, null);
        }
        
        /// <remarks/>
        public void FnewMotorClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string policyType, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string officelocation, 
                    string residentialocation, 
                    object userState) {
            if ((this.FnewMotorClientOnboadingRequestsOperationCompleted == null)) {
                this.FnewMotorClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewMotorClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewMotorClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        policyType,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo,
                        officelocation,
                        residentialocation}, this.FnewMotorClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewMotorClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewMotorClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewMotorClientOnboadingRequestsCompleted(this, new FnewMotorClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewClientApplicationsCommunicationDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewClientApplicationsCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewClientApplicationsCommunicationDetails(string docNo, string telnumber1, string telnumber2, string txtcity, string txtfacebook, string txtemail, string txtaddress, string txtpostcode, string txttwitter, string txtlinkedin, string txtgoogle) {
            object[] results = this.Invoke("FnewClientApplicationsCommunicationDetails", new object[] {
                        docNo,
                        telnumber1,
                        telnumber2,
                        txtcity,
                        txtfacebook,
                        txtemail,
                        txtaddress,
                        txtpostcode,
                        txttwitter,
                        txtlinkedin,
                        txtgoogle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewClientApplicationsCommunicationDetailsAsync(string docNo, string telnumber1, string telnumber2, string txtcity, string txtfacebook, string txtemail, string txtaddress, string txtpostcode, string txttwitter, string txtlinkedin, string txtgoogle) {
            this.FnewClientApplicationsCommunicationDetailsAsync(docNo, telnumber1, telnumber2, txtcity, txtfacebook, txtemail, txtaddress, txtpostcode, txttwitter, txtlinkedin, txtgoogle, null);
        }
        
        /// <remarks/>
        public void FnewClientApplicationsCommunicationDetailsAsync(string docNo, string telnumber1, string telnumber2, string txtcity, string txtfacebook, string txtemail, string txtaddress, string txtpostcode, string txttwitter, string txtlinkedin, string txtgoogle, object userState) {
            if ((this.FnewClientApplicationsCommunicationDetailsOperationCompleted == null)) {
                this.FnewClientApplicationsCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewClientApplicationsCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnewClientApplicationsCommunicationDetails", new object[] {
                        docNo,
                        telnumber1,
                        telnumber2,
                        txtcity,
                        txtfacebook,
                        txtemail,
                        txtaddress,
                        txtpostcode,
                        txttwitter,
                        txtlinkedin,
                        txtgoogle}, this.FnewClientApplicationsCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnFnewClientApplicationsCommunicationDetailsOperationCompleted(object arg) {
            if ((this.FnewClientApplicationsCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewClientApplicationsCommunicationDetailsCompleted(this, new FnewClientApplicationsCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:NewCorporateClientOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="NewCorporateClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string NewCorporateClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus) {
            object[] results = this.Invoke("NewCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        mpesaNo,
                        tel_mobileNo,
                        tel_mobileNo2,
                        email,
                        postCode,
                        address,
                        city,
                        facebook,
                        twitter,
                        linkedIn,
                        googlePlus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus) {
            this.NewCorporateClientOnboadingRequestsAsync(docNo, empNo, cust_category, business_type, pinNo, countryOfResidence, countyCode, cert_of_incorporation_no, nature_of_business, office_location, building, bank_acc_no, bank_name, company_name, mpesaNo, tel_mobileNo, tel_mobileNo2, email, postCode, address, city, facebook, twitter, linkedIn, googlePlus, null);
        }
        
        /// <remarks/>
        public void NewCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string mpesaNo, 
                    string tel_mobileNo, 
                    string tel_mobileNo2, 
                    string email, 
                    string postCode, 
                    string address, 
                    string city, 
                    string facebook, 
                    string twitter, 
                    string linkedIn, 
                    string googlePlus, 
                    object userState) {
            if ((this.NewCorporateClientOnboadingRequestsOperationCompleted == null)) {
                this.NewCorporateClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCorporateClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("NewCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        mpesaNo,
                        tel_mobileNo,
                        tel_mobileNo2,
                        email,
                        postCode,
                        address,
                        city,
                        facebook,
                        twitter,
                        linkedIn,
                        googlePlus}, this.NewCorporateClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnNewCorporateClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.NewCorporateClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCorporateClientOnboadingRequestsCompleted(this, new NewCorporateClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewCorporateClientOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewCorporateClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewCorporateClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string residentialLocation) {
            object[] results = this.Invoke("FnewCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_subcategory,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        tpolicytypes,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo,
                        residentialLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string residentialLocation) {
            this.FnewCorporateClientOnboadingRequestsAsync(docNo, empNo, cust_category, cust_subcategory, business_type, pinNo, countryOfResidence, countyCode, cert_of_incorporation_no, nature_of_business, office_location, building, bank_acc_no, bank_name, company_name, tpolicytypes, growerapplicanttype, growerNumber, factoryCode, factoryName, financier, hasgrowerNo, residentialLocation, null);
        }
        
        /// <remarks/>
        public void FnewCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    string financier, 
                    bool hasgrowerNo, 
                    string residentialLocation, 
                    object userState) {
            if ((this.FnewCorporateClientOnboadingRequestsOperationCompleted == null)) {
                this.FnewCorporateClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewCorporateClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_subcategory,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        tpolicytypes,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        financier,
                        hasgrowerNo,
                        residentialLocation}, this.FnewCorporateClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewCorporateClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewCorporateClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewCorporateClientOnboadingRequestsCompleted(this, new FnewCorporateClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewMotorCorporateClientOnboadingRequ" +
            "ests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewMotorCorporateClientOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewMotorCorporateClientOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes) {
            object[] results = this.Invoke("FnewMotorCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_subcategory,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        tpolicytypes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewMotorCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes) {
            this.FnewMotorCorporateClientOnboadingRequestsAsync(docNo, empNo, cust_category, cust_subcategory, business_type, pinNo, countryOfResidence, countyCode, cert_of_incorporation_no, nature_of_business, office_location, building, bank_acc_no, bank_name, company_name, tpolicytypes, null);
        }
        
        /// <remarks/>
        public void FnewMotorCorporateClientOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_subcategory, 
                    int business_type, 
                    string pinNo, 
                    string countryOfResidence, 
                    string countyCode, 
                    string cert_of_incorporation_no, 
                    string nature_of_business, 
                    string office_location, 
                    string building, 
                    string bank_acc_no, 
                    string bank_name, 
                    string company_name, 
                    string tpolicytypes, 
                    object userState) {
            if ((this.FnewMotorCorporateClientOnboadingRequestsOperationCompleted == null)) {
                this.FnewMotorCorporateClientOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewMotorCorporateClientOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewMotorCorporateClientOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_subcategory,
                        business_type,
                        pinNo,
                        countryOfResidence,
                        countyCode,
                        cert_of_incorporation_no,
                        nature_of_business,
                        office_location,
                        building,
                        bank_acc_no,
                        bank_name,
                        company_name,
                        tpolicytypes}, this.FnewMotorCorporateClientOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewMotorCorporateClientOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewMotorCorporateClientOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewMotorCorporateClientOnboadingRequestsCompleted(this, new FnewMotorCorporateClientOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:CreateClientDependants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="CreateClientDependants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateClientDependants(string docNo, string dependantCode, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition) {
            object[] results = this.Invoke("CreateClientDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        dOB,
                        relationship,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium,
                        dependantphoto,
                        gender,
                        havecondition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateClientDependantsAsync(string docNo, string dependantCode, string name, System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition) {
            this.CreateClientDependantsAsync(docNo, dependantCode, name, dOB, relationship, idNo, age, dependantType, dHB, premium, dependantphoto, gender, havecondition, null);
        }
        
        /// <remarks/>
        public void CreateClientDependantsAsync(string docNo, string dependantCode, string name, System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition, object userState) {
            if ((this.CreateClientDependantsOperationCompleted == null)) {
                this.CreateClientDependantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClientDependantsOperationCompleted);
            }
            this.InvokeAsync("CreateClientDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        dOB,
                        relationship,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium,
                        dependantphoto,
                        gender,
                        havecondition}, this.CreateClientDependantsOperationCompleted, userState);
        }
        
        private void OnCreateClientDependantsOperationCompleted(object arg) {
            if ((this.CreateClientDependantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClientDependantsCompleted(this, new CreateClientDependantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnPolicyAmmendmentscreCreateClientDep" +
            "endants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnPolicyAmmendmentscreCreateClientDependants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPolicyAmmendmentscreCreateClientDependants(string docNo, string dependantCode, string name, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition) {
            object[] results = this.Invoke("FnPolicyAmmendmentscreCreateClientDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        dOB,
                        relationship,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium,
                        dependantphoto,
                        gender,
                        havecondition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentscreCreateClientDependantsAsync(string docNo, string dependantCode, string name, System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition) {
            this.FnPolicyAmmendmentscreCreateClientDependantsAsync(docNo, dependantCode, name, dOB, relationship, idNo, age, dependantType, dHB, premium, dependantphoto, gender, havecondition, null);
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentscreCreateClientDependantsAsync(string docNo, string dependantCode, string name, System.DateTime dOB, int relationship, string idNo, decimal age, int dependantType, string dHB, decimal premium, string dependantphoto, int gender, int havecondition, object userState) {
            if ((this.FnPolicyAmmendmentscreCreateClientDependantsOperationCompleted == null)) {
                this.FnPolicyAmmendmentscreCreateClientDependantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPolicyAmmendmentscreCreateClientDependantsOperationCompleted);
            }
            this.InvokeAsync("FnPolicyAmmendmentscreCreateClientDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        dOB,
                        relationship,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium,
                        dependantphoto,
                        gender,
                        havecondition}, this.FnPolicyAmmendmentscreCreateClientDependantsOperationCompleted, userState);
        }
        
        private void OnFnPolicyAmmendmentscreCreateClientDependantsOperationCompleted(object arg) {
            if ((this.FnPolicyAmmendmentscreCreateClientDependantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPolicyAmmendmentscreCreateClientDependantsCompleted(this, new FnPolicyAmmendmentscreCreateClientDependantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreatePolicyDependants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreatePolicyDependants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatePolicyDependants(string docNo, string dependantCode, string name, int relationship, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string idNo, decimal age, int dependantType, string dHB, decimal premium) {
            object[] results = this.Invoke("FnCreatePolicyDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatePolicyDependantsAsync(string docNo, string dependantCode, string name, int relationship, System.DateTime dOB, string idNo, decimal age, int dependantType, string dHB, decimal premium) {
            this.FnCreatePolicyDependantsAsync(docNo, dependantCode, name, relationship, dOB, idNo, age, dependantType, dHB, premium, null);
        }
        
        /// <remarks/>
        public void FnCreatePolicyDependantsAsync(string docNo, string dependantCode, string name, int relationship, System.DateTime dOB, string idNo, decimal age, int dependantType, string dHB, decimal premium, object userState) {
            if ((this.FnCreatePolicyDependantsOperationCompleted == null)) {
                this.FnCreatePolicyDependantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatePolicyDependantsOperationCompleted);
            }
            this.InvokeAsync("FnCreatePolicyDependants", new object[] {
                        docNo,
                        dependantCode,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        dependantType,
                        dHB,
                        premium}, this.FnCreatePolicyDependantsOperationCompleted, userState);
        }
        
        private void OnFnCreatePolicyDependantsOperationCompleted(object arg) {
            if ((this.FnCreatePolicyDependantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatePolicyDependantsCompleted(this, new FnCreatePolicyDependantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:CreateClientBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="CreateClientBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateClientBeneficiary(string docNo, string beneficiary, string name, int relationship, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender) {
            object[] results = this.Invoke("CreateClientBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateClientBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender) {
            this.CreateClientBeneficiaryAsync(docNo, beneficiary, name, relationship, dOB, idNo, age, allocation, gender, null);
        }
        
        /// <remarks/>
        public void CreateClientBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender, object userState) {
            if ((this.CreateClientBeneficiaryOperationCompleted == null)) {
                this.CreateClientBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClientBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("CreateClientBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation,
                        gender}, this.CreateClientBeneficiaryOperationCompleted, userState);
        }
        
        private void OnCreateClientBeneficiaryOperationCompleted(object arg) {
            if ((this.CreateClientBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClientBeneficiaryCompleted(this, new CreateClientBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnPolicyAmmendmentsCreateClientBenefi" +
            "ciary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnPolicyAmmendmentsCreateClientBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPolicyAmmendmentsCreateClientBeneficiary(string docNo, string beneficiary, string name, int relationship, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender) {
            object[] results = this.Invoke("FnPolicyAmmendmentsCreateClientBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsCreateClientBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender) {
            this.FnPolicyAmmendmentsCreateClientBeneficiaryAsync(docNo, beneficiary, name, relationship, dOB, idNo, age, allocation, gender, null);
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsCreateClientBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, int gender, object userState) {
            if ((this.FnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted == null)) {
                this.FnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("FnPolicyAmmendmentsCreateClientBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation,
                        gender}, this.FnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted, userState);
        }
        
        private void OnFnPolicyAmmendmentsCreateClientBeneficiaryOperationCompleted(object arg) {
            if ((this.FnPolicyAmmendmentsCreateClientBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPolicyAmmendmentsCreateClientBeneficiaryCompleted(this, new FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:ValidateClientBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="ValidateClientBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ValidateClientBeneficiary(string docNo) {
            object[] results = this.Invoke("ValidateClientBeneficiary", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateClientBeneficiaryAsync(string docNo) {
            this.ValidateClientBeneficiaryAsync(docNo, null);
        }
        
        /// <remarks/>
        public void ValidateClientBeneficiaryAsync(string docNo, object userState) {
            if ((this.ValidateClientBeneficiaryOperationCompleted == null)) {
                this.ValidateClientBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateClientBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("ValidateClientBeneficiary", new object[] {
                        docNo}, this.ValidateClientBeneficiaryOperationCompleted, userState);
        }
        
        private void OnValidateClientBeneficiaryOperationCompleted(object arg) {
            if ((this.ValidateClientBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateClientBeneficiaryCompleted(this, new ValidateClientBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnValidateClientBeneficiaryPolicyAmme" +
            "ndments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnValidateClientBeneficiaryPolicyAmmendments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnValidateClientBeneficiaryPolicyAmmendments(string docNo) {
            object[] results = this.Invoke("FnValidateClientBeneficiaryPolicyAmmendments", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnValidateClientBeneficiaryPolicyAmmendmentsAsync(string docNo) {
            this.FnValidateClientBeneficiaryPolicyAmmendmentsAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnValidateClientBeneficiaryPolicyAmmendmentsAsync(string docNo, object userState) {
            if ((this.FnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted == null)) {
                this.FnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted);
            }
            this.InvokeAsync("FnValidateClientBeneficiaryPolicyAmmendments", new object[] {
                        docNo}, this.FnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted, userState);
        }
        
        private void OnFnValidateClientBeneficiaryPolicyAmmendmentsOperationCompleted(object arg) {
            if ((this.FnValidateClientBeneficiaryPolicyAmmendmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnValidateClientBeneficiaryPolicyAmmendmentsCompleted(this, new FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreatePolicytBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreatePolicytBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreatePolicytBeneficiary(string docNo, string beneficiary, string name, int relationship, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string idNo, decimal age, decimal allocation) {
            object[] results = this.Invoke("FnCreatePolicytBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreatePolicytBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation) {
            this.FnCreatePolicytBeneficiaryAsync(docNo, beneficiary, name, relationship, dOB, idNo, age, allocation, null);
        }
        
        /// <remarks/>
        public void FnCreatePolicytBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, object userState) {
            if ((this.FnCreatePolicytBeneficiaryOperationCompleted == null)) {
                this.FnCreatePolicytBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreatePolicytBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("FnCreatePolicytBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation}, this.FnCreatePolicytBeneficiaryOperationCompleted, userState);
        }
        
        private void OnFnCreatePolicytBeneficiaryOperationCompleted(object arg) {
            if ((this.FnCreatePolicytBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreatePolicytBeneficiaryCompleted(this, new FnCreatePolicytBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:UpdatePolicyDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="UpdatePolicyDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePolicyDetails(
                    string docNo, 
                    int applicantType, 
                    string product, 
                    int paymentMode, 
                    string insurer, 
                    string paymentCode, 
                    string servicePeriod, 
                    string financier, 
                    int invoicePeriod, 
                    string financierName, 
                    int memberType, 
                    int agentDetail, 
                    string dhb, 
                    string agentcode, 
                    decimal dhbPremium, 
                    bool suspend, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime suspendToDate) {
            object[] results = this.Invoke("UpdatePolicyDetails", new object[] {
                        docNo,
                        applicantType,
                        product,
                        paymentMode,
                        insurer,
                        paymentCode,
                        servicePeriod,
                        financier,
                        invoicePeriod,
                        financierName,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        dhbPremium,
                        suspend,
                        suspendToDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePolicyDetailsAsync(
                    string docNo, 
                    int applicantType, 
                    string product, 
                    int paymentMode, 
                    string insurer, 
                    string paymentCode, 
                    string servicePeriod, 
                    string financier, 
                    int invoicePeriod, 
                    string financierName, 
                    int memberType, 
                    int agentDetail, 
                    string dhb, 
                    string agentcode, 
                    decimal dhbPremium, 
                    bool suspend, 
                    System.DateTime suspendToDate) {
            this.UpdatePolicyDetailsAsync(docNo, applicantType, product, paymentMode, insurer, paymentCode, servicePeriod, financier, invoicePeriod, financierName, memberType, agentDetail, dhb, agentcode, dhbPremium, suspend, suspendToDate, null);
        }
        
        /// <remarks/>
        public void UpdatePolicyDetailsAsync(
                    string docNo, 
                    int applicantType, 
                    string product, 
                    int paymentMode, 
                    string insurer, 
                    string paymentCode, 
                    string servicePeriod, 
                    string financier, 
                    int invoicePeriod, 
                    string financierName, 
                    int memberType, 
                    int agentDetail, 
                    string dhb, 
                    string agentcode, 
                    decimal dhbPremium, 
                    bool suspend, 
                    System.DateTime suspendToDate, 
                    object userState) {
            if ((this.UpdatePolicyDetailsOperationCompleted == null)) {
                this.UpdatePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdatePolicyDetails", new object[] {
                        docNo,
                        applicantType,
                        product,
                        paymentMode,
                        insurer,
                        paymentCode,
                        servicePeriod,
                        financier,
                        invoicePeriod,
                        financierName,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        dhbPremium,
                        suspend,
                        suspendToDate}, this.UpdatePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnUpdatePolicyDetailsOperationCompleted(object arg) {
            if ((this.UpdatePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePolicyDetailsCompleted(this, new UpdatePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnupdatePolicyDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnupdatePolicyDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnupdatePolicyDetails(string docNo, int department, string applicantType, string product, int paymentMode, string financier, int invoicePeriod, int memberType, int agentDetail, string dhb, string agentcode, string referralIdNumber, string referralName, string referralMobileNumber, string mpesaNumber) {
            object[] results = this.Invoke("FnupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        mpesaNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnupdatePolicyDetailsAsync(string docNo, int department, string applicantType, string product, int paymentMode, string financier, int invoicePeriod, int memberType, int agentDetail, string dhb, string agentcode, string referralIdNumber, string referralName, string referralMobileNumber, string mpesaNumber) {
            this.FnupdatePolicyDetailsAsync(docNo, department, applicantType, product, paymentMode, financier, invoicePeriod, memberType, agentDetail, dhb, agentcode, referralIdNumber, referralName, referralMobileNumber, mpesaNumber, null);
        }
        
        /// <remarks/>
        public void FnupdatePolicyDetailsAsync(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string dhb, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    string mpesaNumber, 
                    object userState) {
            if ((this.FnupdatePolicyDetailsOperationCompleted == null)) {
                this.FnupdatePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnupdatePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("FnupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        mpesaNumber}, this.FnupdatePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnFnupdatePolicyDetailsOperationCompleted(object arg) {
            if ((this.FnupdatePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnupdatePolicyDetailsCompleted(this, new FnupdatePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnIndividualupdatePolicyDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnIndividualupdatePolicyDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIndividualupdatePolicyDetails(string docNo, int department, string applicantType, string product, int paymentMode, int invoicePeriod, int memberType, int agentDetail, string dhb, string agentcode, string referralIdNumber, string referralName, string referralMobileNumber, string mpesaNumber) {
            object[] results = this.Invoke("FnIndividualupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        mpesaNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIndividualupdatePolicyDetailsAsync(string docNo, int department, string applicantType, string product, int paymentMode, int invoicePeriod, int memberType, int agentDetail, string dhb, string agentcode, string referralIdNumber, string referralName, string referralMobileNumber, string mpesaNumber) {
            this.FnIndividualupdatePolicyDetailsAsync(docNo, department, applicantType, product, paymentMode, invoicePeriod, memberType, agentDetail, dhb, agentcode, referralIdNumber, referralName, referralMobileNumber, mpesaNumber, null);
        }
        
        /// <remarks/>
        public void FnIndividualupdatePolicyDetailsAsync(string docNo, int department, string applicantType, string product, int paymentMode, int invoicePeriod, int memberType, int agentDetail, string dhb, string agentcode, string referralIdNumber, string referralName, string referralMobileNumber, string mpesaNumber, object userState) {
            if ((this.FnIndividualupdatePolicyDetailsOperationCompleted == null)) {
                this.FnIndividualupdatePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIndividualupdatePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("FnIndividualupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        dhb,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        mpesaNumber}, this.FnIndividualupdatePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnFnIndividualupdatePolicyDetailsOperationCompleted(object arg) {
            if ((this.FnIndividualupdatePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIndividualupdatePolicyDetailsCompleted(this, new FnIndividualupdatePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnIndividualMotorupdatePolicyDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnIndividualMotorupdatePolicyDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIndividualMotorupdatePolicyDetails(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datepaid, 
                    string paymentreference, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks, 
                    string bindercode, 
                    string policyNumber, 
                    decimal premiumratings) {
            object[] results = this.Invoke("FnIndividualMotorupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        txtremarks,
                        bindercode,
                        policyNumber,
                        premiumratings});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyDetailsAsync(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks, 
                    string bindercode, 
                    string policyNumber, 
                    decimal premiumratings) {
            this.FnIndividualMotorupdatePolicyDetailsAsync(docNo, department, applicantType, product, paymentMode, financier, invoicePeriod, memberType, agentDetail, agentcode, referralIdNumber, referralName, referralMobileNumber, nonrenewable, hasbinder, binderfeeRate, commissionrate, paidamount, datepaid, paymentreference, policystartDate, paymentoptions, txtremarks, bindercode, policyNumber, premiumratings, null);
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyDetailsAsync(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks, 
                    string bindercode, 
                    string policyNumber, 
                    decimal premiumratings, 
                    object userState) {
            if ((this.FnIndividualMotorupdatePolicyDetailsOperationCompleted == null)) {
                this.FnIndividualMotorupdatePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIndividualMotorupdatePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("FnIndividualMotorupdatePolicyDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        txtremarks,
                        bindercode,
                        policyNumber,
                        premiumratings}, this.FnIndividualMotorupdatePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnFnIndividualMotorupdatePolicyDetailsOperationCompleted(object arg) {
            if ((this.FnIndividualMotorupdatePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIndividualMotorupdatePolicyDetailsCompleted(this, new FnIndividualMotorupdatePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnIndividualMotorupdatePolicyAmmendme" +
            "ntDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnIndividualMotorupdatePolicyAmmendmentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIndividualMotorupdatePolicyAmmendmentDetails(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datepaid, 
                    string paymentreference, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks) {
            object[] results = this.Invoke("FnIndividualMotorupdatePolicyAmmendmentDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        txtremarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyAmmendmentDetailsAsync(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks) {
            this.FnIndividualMotorupdatePolicyAmmendmentDetailsAsync(docNo, department, applicantType, product, paymentMode, financier, invoicePeriod, memberType, agentDetail, agentcode, referralIdNumber, referralName, referralMobileNumber, nonrenewable, hasbinder, binderfeeRate, commissionrate, paidamount, datepaid, paymentreference, policystartDate, paymentoptions, txtremarks, null);
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyAmmendmentDetailsAsync(
                    string docNo, 
                    int department, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string txtremarks, 
                    object userState) {
            if ((this.FnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted == null)) {
                this.FnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted);
            }
            this.InvokeAsync("FnIndividualMotorupdatePolicyAmmendmentDetails", new object[] {
                        docNo,
                        department,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        txtremarks}, this.FnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted, userState);
        }
        
        private void OnFnIndividualMotorupdatePolicyAmmendmentDetailsOperationCompleted(object arg) {
            if ((this.FnIndividualMotorupdatePolicyAmmendmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIndividualMotorupdatePolicyAmmendmentDetailsCompleted(this, new FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendClientApplicationForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendClientApplicationForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendClientApplicationForApproval(string docNo) {
            object[] results = this.Invoke("SendClientApplicationForApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendClientApplicationForApprovalAsync(string docNo) {
            this.SendClientApplicationForApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendClientApplicationForApprovalAsync(string docNo, object userState) {
            if ((this.SendClientApplicationForApprovalOperationCompleted == null)) {
                this.SendClientApplicationForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendClientApplicationForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendClientApplicationForApproval", new object[] {
                        docNo}, this.SendClientApplicationForApprovalOperationCompleted, userState);
        }
        
        private void OnSendClientApplicationForApprovalOperationCompleted(object arg) {
            if ((this.SendClientApplicationForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendClientApplicationForApprovalCompleted(this, new SendClientApplicationForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:CreateClaimNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="CreateClaimNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateClaimNotification(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofAccident, int placeOfOccurenceTypes, string placeOfOccurence, string customerCategory) {
            object[] results = this.Invoke("CreateClaimNotification", new object[] {
                        docNo,
                        custNo,
                        requestor,
                        policyNo,
                        claimAgainst,
                        dependantNo,
                        claimCategory,
                        dateofAccident,
                        placeOfOccurenceTypes,
                        placeOfOccurence,
                        customerCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateClaimNotificationAsync(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, System.DateTime dateofAccident, int placeOfOccurenceTypes, string placeOfOccurence, string customerCategory) {
            this.CreateClaimNotificationAsync(docNo, custNo, requestor, policyNo, claimAgainst, dependantNo, claimCategory, dateofAccident, placeOfOccurenceTypes, placeOfOccurence, customerCategory, null);
        }
        
        /// <remarks/>
        public void CreateClaimNotificationAsync(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, System.DateTime dateofAccident, int placeOfOccurenceTypes, string placeOfOccurence, string customerCategory, object userState) {
            if ((this.CreateClaimNotificationOperationCompleted == null)) {
                this.CreateClaimNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClaimNotificationOperationCompleted);
            }
            this.InvokeAsync("CreateClaimNotification", new object[] {
                        docNo,
                        custNo,
                        requestor,
                        policyNo,
                        claimAgainst,
                        dependantNo,
                        claimCategory,
                        dateofAccident,
                        placeOfOccurenceTypes,
                        placeOfOccurence,
                        customerCategory}, this.CreateClaimNotificationOperationCompleted, userState);
        }
        
        private void OnCreateClaimNotificationOperationCompleted(object arg) {
            if ((this.CreateClaimNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClaimNotificationCompleted(this, new CreateClaimNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FncreateClaimNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FncreateClaimNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FncreateClaimNotification(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, string placeOfOccurence, string customerCategory, string patientName, decimal claimAmount) {
            object[] results = this.Invoke("FncreateClaimNotification", new object[] {
                        docNo,
                        custNo,
                        requestor,
                        policyNo,
                        claimAgainst,
                        dependantNo,
                        claimCategory,
                        placeOfOccurence,
                        customerCategory,
                        patientName,
                        claimAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FncreateClaimNotificationAsync(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, string placeOfOccurence, string customerCategory, string patientName, decimal claimAmount) {
            this.FncreateClaimNotificationAsync(docNo, custNo, requestor, policyNo, claimAgainst, dependantNo, claimCategory, placeOfOccurence, customerCategory, patientName, claimAmount, null);
        }
        
        /// <remarks/>
        public void FncreateClaimNotificationAsync(string docNo, string custNo, string requestor, string policyNo, int claimAgainst, string dependantNo, int claimCategory, string placeOfOccurence, string customerCategory, string patientName, decimal claimAmount, object userState) {
            if ((this.FncreateClaimNotificationOperationCompleted == null)) {
                this.FncreateClaimNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFncreateClaimNotificationOperationCompleted);
            }
            this.InvokeAsync("FncreateClaimNotification", new object[] {
                        docNo,
                        custNo,
                        requestor,
                        policyNo,
                        claimAgainst,
                        dependantNo,
                        claimCategory,
                        placeOfOccurence,
                        customerCategory,
                        patientName,
                        claimAmount}, this.FncreateClaimNotificationOperationCompleted, userState);
        }
        
        private void OnFncreateClaimNotificationOperationCompleted(object arg) {
            if ((this.FncreateClaimNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FncreateClaimNotificationCompleted(this, new FncreateClaimNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:PushClaimNotificationForValidation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="PushClaimNotificationForValidation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PushClaimNotificationForValidation(string docNo) {
            object[] results = this.Invoke("PushClaimNotificationForValidation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PushClaimNotificationForValidationAsync(string docNo) {
            this.PushClaimNotificationForValidationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PushClaimNotificationForValidationAsync(string docNo, object userState) {
            if ((this.PushClaimNotificationForValidationOperationCompleted == null)) {
                this.PushClaimNotificationForValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushClaimNotificationForValidationOperationCompleted);
            }
            this.InvokeAsync("PushClaimNotificationForValidation", new object[] {
                        docNo}, this.PushClaimNotificationForValidationOperationCompleted, userState);
        }
        
        private void OnPushClaimNotificationForValidationOperationCompleted(object arg) {
            if ((this.PushClaimNotificationForValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushClaimNotificationForValidationCompleted(this, new PushClaimNotificationForValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:PushMotorClaimNotificationForValidati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="PushMotorClaimNotificationForValidation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PushMotorClaimNotificationForValidation(string docNo) {
            object[] results = this.Invoke("PushMotorClaimNotificationForValidation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PushMotorClaimNotificationForValidationAsync(string docNo) {
            this.PushMotorClaimNotificationForValidationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PushMotorClaimNotificationForValidationAsync(string docNo, object userState) {
            if ((this.PushMotorClaimNotificationForValidationOperationCompleted == null)) {
                this.PushMotorClaimNotificationForValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushMotorClaimNotificationForValidationOperationCompleted);
            }
            this.InvokeAsync("PushMotorClaimNotificationForValidation", new object[] {
                        docNo}, this.PushMotorClaimNotificationForValidationOperationCompleted, userState);
        }
        
        private void OnPushMotorClaimNotificationForValidationOperationCompleted(object arg) {
            if ((this.PushMotorClaimNotificationForValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushMotorClaimNotificationForValidationCompleted(this, new PushMotorClaimNotificationForValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMicroInsurancePolicy", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMicroInsurancePolicy_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMicroInsurancePolicy(string empNo, string policyholderNo, int policyType, int typeofApplication, int modeofPayment, int productBillingCycle, int memberType, bool suspend, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime suspendtoDate, int agentDetail, string agentCode, string dhb) {
            object[] results = this.Invoke("FnNewMicroInsurancePolicy", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        suspend,
                        suspendtoDate,
                        agentDetail,
                        agentCode,
                        dhb});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMicroInsurancePolicyAsync(string empNo, string policyholderNo, int policyType, int typeofApplication, int modeofPayment, int productBillingCycle, int memberType, bool suspend, System.DateTime suspendtoDate, int agentDetail, string agentCode, string dhb) {
            this.FnNewMicroInsurancePolicyAsync(empNo, policyholderNo, policyType, typeofApplication, modeofPayment, productBillingCycle, memberType, suspend, suspendtoDate, agentDetail, agentCode, dhb, null);
        }
        
        /// <remarks/>
        public void FnNewMicroInsurancePolicyAsync(string empNo, string policyholderNo, int policyType, int typeofApplication, int modeofPayment, int productBillingCycle, int memberType, bool suspend, System.DateTime suspendtoDate, int agentDetail, string agentCode, string dhb, object userState) {
            if ((this.FnNewMicroInsurancePolicyOperationCompleted == null)) {
                this.FnNewMicroInsurancePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMicroInsurancePolicyOperationCompleted);
            }
            this.InvokeAsync("FnNewMicroInsurancePolicy", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        suspend,
                        suspendtoDate,
                        agentDetail,
                        agentCode,
                        dhb}, this.FnNewMicroInsurancePolicyOperationCompleted, userState);
        }
        
        private void OnFnNewMicroInsurancePolicyOperationCompleted(object arg) {
            if ((this.FnNewMicroInsurancePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMicroInsurancePolicyCompleted(this, new FnNewMicroInsurancePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:PushAmmendmentsClaimNotificationForVa" +
            "lidation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="PushAmmendmentsClaimNotificationForValidation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PushAmmendmentsClaimNotificationForValidation(string docNo) {
            object[] results = this.Invoke("PushAmmendmentsClaimNotificationForValidation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PushAmmendmentsClaimNotificationForValidationAsync(string docNo) {
            this.PushAmmendmentsClaimNotificationForValidationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void PushAmmendmentsClaimNotificationForValidationAsync(string docNo, object userState) {
            if ((this.PushAmmendmentsClaimNotificationForValidationOperationCompleted == null)) {
                this.PushAmmendmentsClaimNotificationForValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushAmmendmentsClaimNotificationForValidationOperationCompleted);
            }
            this.InvokeAsync("PushAmmendmentsClaimNotificationForValidation", new object[] {
                        docNo}, this.PushAmmendmentsClaimNotificationForValidationOperationCompleted, userState);
        }
        
        private void OnPushAmmendmentsClaimNotificationForValidationOperationCompleted(object arg) {
            if ((this.PushAmmendmentsClaimNotificationForValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushAmmendmentsClaimNotificationForValidationCompleted(this, new PushAmmendmentsClaimNotificationForValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewPolicyAmmendment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewPolicyAmmendment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPolicyAmmendment(string empNo, string policyNo, string policyType, string typeofApplication, int modeofPayment, int productBillingCycle, int memberType, int agentDetail, string agentCode) {
            object[] results = this.Invoke("FnNewPolicyAmmendment", new object[] {
                        empNo,
                        policyNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        agentDetail,
                        agentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentAsync(string empNo, string policyNo, string policyType, string typeofApplication, int modeofPayment, int productBillingCycle, int memberType, int agentDetail, string agentCode) {
            this.FnNewPolicyAmmendmentAsync(empNo, policyNo, policyType, typeofApplication, modeofPayment, productBillingCycle, memberType, agentDetail, agentCode, null);
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentAsync(string empNo, string policyNo, string policyType, string typeofApplication, int modeofPayment, int productBillingCycle, int memberType, int agentDetail, string agentCode, object userState) {
            if ((this.FnNewPolicyAmmendmentOperationCompleted == null)) {
                this.FnNewPolicyAmmendmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPolicyAmmendmentOperationCompleted);
            }
            this.InvokeAsync("FnNewPolicyAmmendment", new object[] {
                        empNo,
                        policyNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        agentDetail,
                        agentCode}, this.FnNewPolicyAmmendmentOperationCompleted, userState);
        }
        
        private void OnFnNewPolicyAmmendmentOperationCompleted(object arg) {
            if ((this.FnNewPolicyAmmendmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPolicyAmmendmentCompleted(this, new FnNewPolicyAmmendmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorPolicyAmmendment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorPolicyAmmendment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorPolicyAmmendment(string empNo, string policyNo, string policyType, int businesstype, string typeofApplication, int hasbinder, decimal binderratefee, decimal commissionfee, bool permile, string insurer, int modeofPayment, int productBillingCycle, int memberType, int agentDetail, string agentCode) {
            object[] results = this.Invoke("FnNewMotorPolicyAmmendment", new object[] {
                        empNo,
                        policyNo,
                        policyType,
                        businesstype,
                        typeofApplication,
                        hasbinder,
                        binderratefee,
                        commissionfee,
                        permile,
                        insurer,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        agentDetail,
                        agentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyAmmendmentAsync(string empNo, string policyNo, string policyType, int businesstype, string typeofApplication, int hasbinder, decimal binderratefee, decimal commissionfee, bool permile, string insurer, int modeofPayment, int productBillingCycle, int memberType, int agentDetail, string agentCode) {
            this.FnNewMotorPolicyAmmendmentAsync(empNo, policyNo, policyType, businesstype, typeofApplication, hasbinder, binderratefee, commissionfee, permile, insurer, modeofPayment, productBillingCycle, memberType, agentDetail, agentCode, null);
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyAmmendmentAsync(
                    string empNo, 
                    string policyNo, 
                    string policyType, 
                    int businesstype, 
                    string typeofApplication, 
                    int hasbinder, 
                    decimal binderratefee, 
                    decimal commissionfee, 
                    bool permile, 
                    string insurer, 
                    int modeofPayment, 
                    int productBillingCycle, 
                    int memberType, 
                    int agentDetail, 
                    string agentCode, 
                    object userState) {
            if ((this.FnNewMotorPolicyAmmendmentOperationCompleted == null)) {
                this.FnNewMotorPolicyAmmendmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorPolicyAmmendmentOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorPolicyAmmendment", new object[] {
                        empNo,
                        policyNo,
                        policyType,
                        businesstype,
                        typeofApplication,
                        hasbinder,
                        binderratefee,
                        commissionfee,
                        permile,
                        insurer,
                        modeofPayment,
                        productBillingCycle,
                        memberType,
                        agentDetail,
                        agentCode}, this.FnNewMotorPolicyAmmendmentOperationCompleted, userState);
        }
        
        private void OnFnNewMotorPolicyAmmendmentOperationCompleted(object arg) {
            if ((this.FnNewMotorPolicyAmmendmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorPolicyAmmendmentCompleted(this, new FnNewMotorPolicyAmmendmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorPolicyRieskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorPolicyRieskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorPolicyRieskDetails(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate) {
            object[] results = this.Invoke("FnNewMotorPolicyRieskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyRieskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate) {
            this.FnNewMotorPolicyRieskDetailsAsync(empNo, docNo, riskNo, registrationNo, make, model, vehicletype, covertype, cc, chasisNo, engineNo, yearofManufucture, bodyType, policystartDate, duration, nonRenewable, tonnage, certificateNo, sumInsured, rate, null);
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyRieskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    object userState) {
            if ((this.FnNewMotorPolicyRieskDetailsOperationCompleted == null)) {
                this.FnNewMotorPolicyRieskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorPolicyRieskDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorPolicyRieskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate}, this.FnNewMotorPolicyRieskDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewMotorPolicyRieskDetailsOperationCompleted(object arg) {
            if ((this.FnNewMotorPolicyRieskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorPolicyRieskDetailsCompleted(this, new FnNewMotorPolicyRieskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorIndividualPolicyRiskDetails" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorIndividualPolicyRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorIndividualPolicyRiskDetails(
                    string empNo, 
                    string docNo, 
                    decimal texcesspotector, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium) {
            object[] results = this.Invoke("FnNewMotorIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        texcesspotector,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    decimal texcesspotector, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium) {
            this.FnNewMotorIndividualPolicyRiskDetailsAsync(empNo, docNo, texcesspotector, registrationNo, make, model, vehicletype, covertype, cc, chasisNo, engineNo, yearofManufucture, bodyType, policystartDate, duration, nonRenewable, tonnage, certificateNo, sumInsured, rate, txtvalued, basicpremium, null);
        }
        
        /// <remarks/>
        public void FnNewMotorIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    decimal texcesspotector, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    object userState) {
            if ((this.FnNewMotorIndividualPolicyRiskDetailsOperationCompleted == null)) {
                this.FnNewMotorIndividualPolicyRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorIndividualPolicyRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        texcesspotector,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium}, this.FnNewMotorIndividualPolicyRiskDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewMotorIndividualPolicyRiskDetailsOperationCompleted(object arg) {
            if ((this.FnNewMotorIndividualPolicyRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorIndividualPolicyRiskDetailsCompleted(this, new FnNewMotorIndividualPolicyRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnExistingMicroInsuranceDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnExistingMicroInsuranceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnExistingMicroInsuranceDetails(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string dhb, string ttxtreferalmobilenumber, string ttxtreferralName, string ttxtreferalidnumber) {
            object[] results = this.Invoke("FnExistingMicroInsuranceDetails", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productbillingcycle,
                        membertype,
                        agentdetail,
                        agentcode,
                        dhb,
                        ttxtreferalmobilenumber,
                        ttxtreferralName,
                        ttxtreferalidnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnExistingMicroInsuranceDetailsAsync(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string dhb, string ttxtreferalmobilenumber, string ttxtreferralName, string ttxtreferalidnumber) {
            this.FnExistingMicroInsuranceDetailsAsync(empNo, policyholderNo, policyType, typeofApplication, modeofPayment, productbillingcycle, membertype, agentdetail, agentcode, dhb, ttxtreferalmobilenumber, ttxtreferralName, ttxtreferalidnumber, null);
        }
        
        /// <remarks/>
        public void FnExistingMicroInsuranceDetailsAsync(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string dhb, string ttxtreferalmobilenumber, string ttxtreferralName, string ttxtreferalidnumber, object userState) {
            if ((this.FnExistingMicroInsuranceDetailsOperationCompleted == null)) {
                this.FnExistingMicroInsuranceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExistingMicroInsuranceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnExistingMicroInsuranceDetails", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productbillingcycle,
                        membertype,
                        agentdetail,
                        agentcode,
                        dhb,
                        ttxtreferalmobilenumber,
                        ttxtreferralName,
                        ttxtreferalidnumber}, this.FnExistingMicroInsuranceDetailsOperationCompleted, userState);
        }
        
        private void OnFnExistingMicroInsuranceDetailsOperationCompleted(object arg) {
            if ((this.FnExistingMicroInsuranceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExistingMicroInsuranceDetailsCompleted(this, new FnExistingMicroInsuranceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnExistingMicroInsuranceBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnExistingMicroInsuranceBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnExistingMicroInsuranceBeneficiary(string docNo, string beneficiary, string name, int relationship, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, string idNo, decimal age, decimal allocation) {
            object[] results = this.Invoke("FnExistingMicroInsuranceBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnExistingMicroInsuranceBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation) {
            this.FnExistingMicroInsuranceBeneficiaryAsync(docNo, beneficiary, name, relationship, dOB, idNo, age, allocation, null);
        }
        
        /// <remarks/>
        public void FnExistingMicroInsuranceBeneficiaryAsync(string docNo, string beneficiary, string name, int relationship, System.DateTime dOB, string idNo, decimal age, decimal allocation, object userState) {
            if ((this.FnExistingMicroInsuranceBeneficiaryOperationCompleted == null)) {
                this.FnExistingMicroInsuranceBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExistingMicroInsuranceBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("FnExistingMicroInsuranceBeneficiary", new object[] {
                        docNo,
                        beneficiary,
                        name,
                        relationship,
                        dOB,
                        idNo,
                        age,
                        allocation}, this.FnExistingMicroInsuranceBeneficiaryOperationCompleted, userState);
        }
        
        private void OnFnExistingMicroInsuranceBeneficiaryOperationCompleted(object arg) {
            if ((this.FnExistingMicroInsuranceBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExistingMicroInsuranceBeneficiaryCompleted(this, new FnExistingMicroInsuranceBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnExistingMotorUnderWritingDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnExistingMotorUnderWritingDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnExistingMotorUnderWritingDetails(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string financier) {
            object[] results = this.Invoke("FnExistingMotorUnderWritingDetails", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productbillingcycle,
                        membertype,
                        agentdetail,
                        agentcode,
                        financier});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnExistingMotorUnderWritingDetailsAsync(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string financier) {
            this.FnExistingMotorUnderWritingDetailsAsync(empNo, policyholderNo, policyType, typeofApplication, modeofPayment, productbillingcycle, membertype, agentdetail, agentcode, financier, null);
        }
        
        /// <remarks/>
        public void FnExistingMotorUnderWritingDetailsAsync(string empNo, string policyholderNo, string policyType, string typeofApplication, int modeofPayment, int productbillingcycle, int membertype, int agentdetail, string agentcode, string financier, object userState) {
            if ((this.FnExistingMotorUnderWritingDetailsOperationCompleted == null)) {
                this.FnExistingMotorUnderWritingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExistingMotorUnderWritingDetailsOperationCompleted);
            }
            this.InvokeAsync("FnExistingMotorUnderWritingDetails", new object[] {
                        empNo,
                        policyholderNo,
                        policyType,
                        typeofApplication,
                        modeofPayment,
                        productbillingcycle,
                        membertype,
                        agentdetail,
                        agentcode,
                        financier}, this.FnExistingMotorUnderWritingDetailsOperationCompleted, userState);
        }
        
        private void OnFnExistingMotorUnderWritingDetailsOperationCompleted(object arg) {
            if ((this.FnExistingMotorUnderWritingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExistingMotorUnderWritingDetailsCompleted(this, new FnExistingMotorUnderWritingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:AppSendStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="AppSendStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AppSendStatement(string memberNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("AppSendStatement", new object[] {
                        memberNo,
                        dateFrom,
                        dateTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppSendStatementAsync(string memberNo, System.DateTime dateFrom, System.DateTime dateTo) {
            this.AppSendStatementAsync(memberNo, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void AppSendStatementAsync(string memberNo, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.AppSendStatementOperationCompleted == null)) {
                this.AppSendStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppSendStatementOperationCompleted);
            }
            this.InvokeAsync("AppSendStatement", new object[] {
                        memberNo,
                        dateFrom,
                        dateTo}, this.AppSendStatementOperationCompleted, userState);
        }
        
        private void OnAppSendStatementOperationCompleted(object arg) {
            if ((this.AppSendStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppSendStatementCompleted(this, new AppSendStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:PromotetoBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="PromotetoBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PromotetoBeneficiary(string applicationNumber, string dependantNo) {
            object[] results = this.Invoke("PromotetoBeneficiary", new object[] {
                        applicationNumber,
                        dependantNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PromotetoBeneficiaryAsync(string applicationNumber, string dependantNo) {
            this.PromotetoBeneficiaryAsync(applicationNumber, dependantNo, null);
        }
        
        /// <remarks/>
        public void PromotetoBeneficiaryAsync(string applicationNumber, string dependantNo, object userState) {
            if ((this.PromotetoBeneficiaryOperationCompleted == null)) {
                this.PromotetoBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPromotetoBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("PromotetoBeneficiary", new object[] {
                        applicationNumber,
                        dependantNo}, this.PromotetoBeneficiaryOperationCompleted, userState);
        }
        
        private void OnPromotetoBeneficiaryOperationCompleted(object arg) {
            if ((this.PromotetoBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PromotetoBeneficiaryCompleted(this, new PromotetoBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:PromotetoBeneficiaryPolicyAmmendments" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="PromotetoBeneficiaryPolicyAmmendments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PromotetoBeneficiaryPolicyAmmendments(string applicationNumber, string dependantNo) {
            object[] results = this.Invoke("PromotetoBeneficiaryPolicyAmmendments", new object[] {
                        applicationNumber,
                        dependantNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PromotetoBeneficiaryPolicyAmmendmentsAsync(string applicationNumber, string dependantNo) {
            this.PromotetoBeneficiaryPolicyAmmendmentsAsync(applicationNumber, dependantNo, null);
        }
        
        /// <remarks/>
        public void PromotetoBeneficiaryPolicyAmmendmentsAsync(string applicationNumber, string dependantNo, object userState) {
            if ((this.PromotetoBeneficiaryPolicyAmmendmentsOperationCompleted == null)) {
                this.PromotetoBeneficiaryPolicyAmmendmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPromotetoBeneficiaryPolicyAmmendmentsOperationCompleted);
            }
            this.InvokeAsync("PromotetoBeneficiaryPolicyAmmendments", new object[] {
                        applicationNumber,
                        dependantNo}, this.PromotetoBeneficiaryPolicyAmmendmentsOperationCompleted, userState);
        }
        
        private void OnPromotetoBeneficiaryPolicyAmmendmentsOperationCompleted(object arg) {
            if ((this.PromotetoBeneficiaryPolicyAmmendmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PromotetoBeneficiaryPolicyAmmendmentsCompleted(this, new PromotetoBeneficiaryPolicyAmmendmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteClientPolicyAmendmentsBeneficia" +
            "ry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteClientPolicyAmendmentsBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClientPolicyAmendmentsBeneficiary(string applicationNumber, string beneficiaryNo) {
            object[] results = this.Invoke("DeleteClientPolicyAmendmentsBeneficiary", new object[] {
                        applicationNumber,
                        beneficiaryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientPolicyAmendmentsBeneficiaryAsync(string applicationNumber, string beneficiaryNo) {
            this.DeleteClientPolicyAmendmentsBeneficiaryAsync(applicationNumber, beneficiaryNo, null);
        }
        
        /// <remarks/>
        public void DeleteClientPolicyAmendmentsBeneficiaryAsync(string applicationNumber, string beneficiaryNo, object userState) {
            if ((this.DeleteClientPolicyAmendmentsBeneficiaryOperationCompleted == null)) {
                this.DeleteClientPolicyAmendmentsBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientPolicyAmendmentsBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("DeleteClientPolicyAmendmentsBeneficiary", new object[] {
                        applicationNumber,
                        beneficiaryNo}, this.DeleteClientPolicyAmendmentsBeneficiaryOperationCompleted, userState);
        }
        
        private void OnDeleteClientPolicyAmendmentsBeneficiaryOperationCompleted(object arg) {
            if ((this.DeleteClientPolicyAmendmentsBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientPolicyAmendmentsBeneficiaryCompleted(this, new DeleteClientPolicyAmendmentsBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteClientBeneficiary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteClientBeneficiary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClientBeneficiary(string applicationNumber, string beneficiaryNo) {
            object[] results = this.Invoke("DeleteClientBeneficiary", new object[] {
                        applicationNumber,
                        beneficiaryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientBeneficiaryAsync(string applicationNumber, string beneficiaryNo) {
            this.DeleteClientBeneficiaryAsync(applicationNumber, beneficiaryNo, null);
        }
        
        /// <remarks/>
        public void DeleteClientBeneficiaryAsync(string applicationNumber, string beneficiaryNo, object userState) {
            if ((this.DeleteClientBeneficiaryOperationCompleted == null)) {
                this.DeleteClientBeneficiaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientBeneficiaryOperationCompleted);
            }
            this.InvokeAsync("DeleteClientBeneficiary", new object[] {
                        applicationNumber,
                        beneficiaryNo}, this.DeleteClientBeneficiaryOperationCompleted, userState);
        }
        
        private void OnDeleteClientBeneficiaryOperationCompleted(object arg) {
            if ((this.DeleteClientBeneficiaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientBeneficiaryCompleted(this, new DeleteClientBeneficiaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteClientRiskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteClientRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClientRiskDetails(string applicationNumber, string registrationNumber) {
            object[] results = this.Invoke("DeleteClientRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientRiskDetailsAsync(string applicationNumber, string registrationNumber) {
            this.DeleteClientRiskDetailsAsync(applicationNumber, registrationNumber, null);
        }
        
        /// <remarks/>
        public void DeleteClientRiskDetailsAsync(string applicationNumber, string registrationNumber, object userState) {
            if ((this.DeleteClientRiskDetailsOperationCompleted == null)) {
                this.DeleteClientRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteClientRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber}, this.DeleteClientRiskDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteClientRiskDetailsOperationCompleted(object arg) {
            if ((this.DeleteClientRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientRiskDetailsCompleted(this, new DeleteClientRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteClientDependant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteClientDependant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClientDependant(string applicationNumber, string dependantNo) {
            object[] results = this.Invoke("DeleteClientDependant", new object[] {
                        applicationNumber,
                        dependantNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientDependantAsync(string applicationNumber, string dependantNo) {
            this.DeleteClientDependantAsync(applicationNumber, dependantNo, null);
        }
        
        /// <remarks/>
        public void DeleteClientDependantAsync(string applicationNumber, string dependantNo, object userState) {
            if ((this.DeleteClientDependantOperationCompleted == null)) {
                this.DeleteClientDependantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientDependantOperationCompleted);
            }
            this.InvokeAsync("DeleteClientDependant", new object[] {
                        applicationNumber,
                        dependantNo}, this.DeleteClientDependantOperationCompleted, userState);
        }
        
        private void OnDeleteClientDependantOperationCompleted(object arg) {
            if ((this.DeleteClientDependantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientDependantCompleted(this, new DeleteClientDependantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteClientPolicyAmendmentssDependan" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteClientPolicyAmendmentssDependant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteClientPolicyAmendmentssDependant(string applicationNumber, string dependantNo) {
            object[] results = this.Invoke("DeleteClientPolicyAmendmentssDependant", new object[] {
                        applicationNumber,
                        dependantNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientPolicyAmendmentssDependantAsync(string applicationNumber, string dependantNo) {
            this.DeleteClientPolicyAmendmentssDependantAsync(applicationNumber, dependantNo, null);
        }
        
        /// <remarks/>
        public void DeleteClientPolicyAmendmentssDependantAsync(string applicationNumber, string dependantNo, object userState) {
            if ((this.DeleteClientPolicyAmendmentssDependantOperationCompleted == null)) {
                this.DeleteClientPolicyAmendmentssDependantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientPolicyAmendmentssDependantOperationCompleted);
            }
            this.InvokeAsync("DeleteClientPolicyAmendmentssDependant", new object[] {
                        applicationNumber,
                        dependantNo}, this.DeleteClientPolicyAmendmentssDependantOperationCompleted, userState);
        }
        
        private void OnDeleteClientPolicyAmendmentssDependantOperationCompleted(object arg) {
            if ((this.DeleteClientPolicyAmendmentssDependantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientPolicyAmendmentssDependantCompleted(this, new DeleteClientPolicyAmendmentssDependantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendIndividualClientApplicationApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendIndividualClientApplicationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendIndividualClientApplicationApproval(string docNumber) {
            object[] results = this.Invoke("SendIndividualClientApplicationApproval", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendIndividualClientApplicationApprovalAsync(string docNumber) {
            this.SendIndividualClientApplicationApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendIndividualClientApplicationApprovalAsync(string docNumber, object userState) {
            if ((this.SendIndividualClientApplicationApprovalOperationCompleted == null)) {
                this.SendIndividualClientApplicationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIndividualClientApplicationApprovalOperationCompleted);
            }
            this.InvokeAsync("SendIndividualClientApplicationApproval", new object[] {
                        docNumber}, this.SendIndividualClientApplicationApprovalOperationCompleted, userState);
        }
        
        private void OnSendIndividualClientApplicationApprovalOperationCompleted(object arg) {
            if ((this.SendIndividualClientApplicationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIndividualClientApplicationApprovalCompleted(this, new SendIndividualClientApplicationApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendIndividualKYMPolicyAmmendmentAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendIndividualKYMPolicyAmmendmentApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendIndividualKYMPolicyAmmendmentApproval(string docNumber) {
            object[] results = this.Invoke("SendIndividualKYMPolicyAmmendmentApproval", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendIndividualKYMPolicyAmmendmentApprovalAsync(string docNumber) {
            this.SendIndividualKYMPolicyAmmendmentApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendIndividualKYMPolicyAmmendmentApprovalAsync(string docNumber, object userState) {
            if ((this.SendIndividualKYMPolicyAmmendmentApprovalOperationCompleted == null)) {
                this.SendIndividualKYMPolicyAmmendmentApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIndividualKYMPolicyAmmendmentApprovalOperationCompleted);
            }
            this.InvokeAsync("SendIndividualKYMPolicyAmmendmentApproval", new object[] {
                        docNumber}, this.SendIndividualKYMPolicyAmmendmentApprovalOperationCompleted, userState);
        }
        
        private void OnSendIndividualKYMPolicyAmmendmentApprovalOperationCompleted(object arg) {
            if ((this.SendIndividualKYMPolicyAmmendmentApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIndividualKYMPolicyAmmendmentApprovalCompleted(this, new SendIndividualKYMPolicyAmmendmentApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewBCCAgentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewBCCAgentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewBCCAgentDetails(string empNumber, string factoryCode, string agentCode, string name, string iDNumber, string mobileNumber) {
            object[] results = this.Invoke("FnNewBCCAgentDetails", new object[] {
                        empNumber,
                        factoryCode,
                        agentCode,
                        name,
                        iDNumber,
                        mobileNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewBCCAgentDetailsAsync(string empNumber, string factoryCode, string agentCode, string name, string iDNumber, string mobileNumber) {
            this.FnNewBCCAgentDetailsAsync(empNumber, factoryCode, agentCode, name, iDNumber, mobileNumber, null);
        }
        
        /// <remarks/>
        public void FnNewBCCAgentDetailsAsync(string empNumber, string factoryCode, string agentCode, string name, string iDNumber, string mobileNumber, object userState) {
            if ((this.FnNewBCCAgentDetailsOperationCompleted == null)) {
                this.FnNewBCCAgentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewBCCAgentDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewBCCAgentDetails", new object[] {
                        empNumber,
                        factoryCode,
                        agentCode,
                        name,
                        iDNumber,
                        mobileNumber}, this.FnNewBCCAgentDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewBCCAgentDetailsOperationCompleted(object arg) {
            if ((this.FnNewBCCAgentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewBCCAgentDetailsCompleted(this, new FnNewBCCAgentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreateAgentDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreateAgentDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateAgentDetails(string applicationNo) {
            object[] results = this.Invoke("FnCreateAgentDetails", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateAgentDetailsAsync(string applicationNo) {
            this.FnCreateAgentDetailsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnCreateAgentDetailsAsync(string applicationNo, object userState) {
            if ((this.FnCreateAgentDetailsOperationCompleted == null)) {
                this.FnCreateAgentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateAgentDetailsOperationCompleted);
            }
            this.InvokeAsync("FnCreateAgentDetails", new object[] {
                        applicationNo}, this.FnCreateAgentDetailsOperationCompleted, userState);
        }
        
        private void OnFnCreateAgentDetailsOperationCompleted(object arg) {
            if ((this.FnCreateAgentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateAgentDetailsCompleted(this, new FnCreateAgentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetFactoryCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetFactoryCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetFactoryCode(string growerNumber, int applicantType) {
            object[] results = this.Invoke("FnGetFactoryCode", new object[] {
                        growerNumber,
                        applicantType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetFactoryCodeAsync(string growerNumber, int applicantType) {
            this.FnGetFactoryCodeAsync(growerNumber, applicantType, null);
        }
        
        /// <remarks/>
        public void FnGetFactoryCodeAsync(string growerNumber, int applicantType, object userState) {
            if ((this.FnGetFactoryCodeOperationCompleted == null)) {
                this.FnGetFactoryCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetFactoryCodeOperationCompleted);
            }
            this.InvokeAsync("FnGetFactoryCode", new object[] {
                        growerNumber,
                        applicantType}, this.FnGetFactoryCodeOperationCompleted, userState);
        }
        
        private void OnFnGetFactoryCodeOperationCompleted(object arg) {
            if ((this.FnGetFactoryCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetFactoryCodeCompleted(this, new FnGetFactoryCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetFactoryName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetFactoryName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetFactoryName(string growerNumber, int applicantType) {
            object[] results = this.Invoke("FnGetFactoryName", new object[] {
                        growerNumber,
                        applicantType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetFactoryNameAsync(string growerNumber, int applicantType) {
            this.FnGetFactoryNameAsync(growerNumber, applicantType, null);
        }
        
        /// <remarks/>
        public void FnGetFactoryNameAsync(string growerNumber, int applicantType, object userState) {
            if ((this.FnGetFactoryNameOperationCompleted == null)) {
                this.FnGetFactoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetFactoryNameOperationCompleted);
            }
            this.InvokeAsync("FnGetFactoryName", new object[] {
                        growerNumber,
                        applicantType}, this.FnGetFactoryNameOperationCompleted, userState);
        }
        
        private void OnFnGetFactoryNameOperationCompleted(object arg) {
            if ((this.FnGetFactoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetFactoryNameCompleted(this, new FnGetFactoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAddPrincipalMemberConditions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAddPrincipalMemberConditions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddPrincipalMemberConditions(string applicationNumber, string conditionCode, int haveConditions) {
            object[] results = this.Invoke("FnAddPrincipalMemberConditions", new object[] {
                        applicationNumber,
                        conditionCode,
                        haveConditions});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddPrincipalMemberConditionsAsync(string applicationNumber, string conditionCode, int haveConditions) {
            this.FnAddPrincipalMemberConditionsAsync(applicationNumber, conditionCode, haveConditions, null);
        }
        
        /// <remarks/>
        public void FnAddPrincipalMemberConditionsAsync(string applicationNumber, string conditionCode, int haveConditions, object userState) {
            if ((this.FnAddPrincipalMemberConditionsOperationCompleted == null)) {
                this.FnAddPrincipalMemberConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddPrincipalMemberConditionsOperationCompleted);
            }
            this.InvokeAsync("FnAddPrincipalMemberConditions", new object[] {
                        applicationNumber,
                        conditionCode,
                        haveConditions}, this.FnAddPrincipalMemberConditionsOperationCompleted, userState);
        }
        
        private void OnFnAddPrincipalMemberConditionsOperationCompleted(object arg) {
            if ((this.FnAddPrincipalMemberConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddPrincipalMemberConditionsCompleted(this, new FnAddPrincipalMemberConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAddDependantConditions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAddDependantConditions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDependantConditions(string applicationNumber, string conditionCode, string dependantCode) {
            object[] results = this.Invoke("FnAddDependantConditions", new object[] {
                        applicationNumber,
                        conditionCode,
                        dependantCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDependantConditionsAsync(string applicationNumber, string conditionCode, string dependantCode) {
            this.FnAddDependantConditionsAsync(applicationNumber, conditionCode, dependantCode, null);
        }
        
        /// <remarks/>
        public void FnAddDependantConditionsAsync(string applicationNumber, string conditionCode, string dependantCode, object userState) {
            if ((this.FnAddDependantConditionsOperationCompleted == null)) {
                this.FnAddDependantConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDependantConditionsOperationCompleted);
            }
            this.InvokeAsync("FnAddDependantConditions", new object[] {
                        applicationNumber,
                        conditionCode,
                        dependantCode}, this.FnAddDependantConditionsOperationCompleted, userState);
        }
        
        private void OnFnAddDependantConditionsOperationCompleted(object arg) {
            if ((this.FnAddDependantConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDependantConditionsCompleted(this, new FnAddDependantConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:RemoveDependantConditions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="RemoveDependantConditions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveDependantConditions(string conditionCode, string docNumber) {
            object[] results = this.Invoke("RemoveDependantConditions", new object[] {
                        conditionCode,
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveDependantConditionsAsync(string conditionCode, string docNumber) {
            this.RemoveDependantConditionsAsync(conditionCode, docNumber, null);
        }
        
        /// <remarks/>
        public void RemoveDependantConditionsAsync(string conditionCode, string docNumber, object userState) {
            if ((this.RemoveDependantConditionsOperationCompleted == null)) {
                this.RemoveDependantConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDependantConditionsOperationCompleted);
            }
            this.InvokeAsync("RemoveDependantConditions", new object[] {
                        conditionCode,
                        docNumber}, this.RemoveDependantConditionsOperationCompleted, userState);
        }
        
        private void OnRemoveDependantConditionsOperationCompleted(object arg) {
            if ((this.RemoveDependantConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDependantConditionsCompleted(this, new RemoveDependantConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAddInsuranceOptionalBenefits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAddInsuranceOptionalBenefits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInsuranceOptionalBenefits(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            object[] results = this.Invoke("FnAddInsuranceOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInsuranceOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            this.FnAddInsuranceOptionalBenefitsAsync(requisitionNo, riskCode, riskoption, amount, null);
        }
        
        /// <remarks/>
        public void FnAddInsuranceOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount, object userState) {
            if ((this.FnAddInsuranceOptionalBenefitsOperationCompleted == null)) {
                this.FnAddInsuranceOptionalBenefitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInsuranceOptionalBenefitsOperationCompleted);
            }
            this.InvokeAsync("FnAddInsuranceOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount}, this.FnAddInsuranceOptionalBenefitsOperationCompleted, userState);
        }
        
        private void OnFnAddInsuranceOptionalBenefitsOperationCompleted(object arg) {
            if ((this.FnAddInsuranceOptionalBenefitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInsuranceOptionalBenefitsCompleted(this, new FnAddInsuranceOptionalBenefitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAddInsuranceExistingOptionalBenefit" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAddInsuranceExistingOptionalBenefits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInsuranceExistingOptionalBenefits(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            object[] results = this.Invoke("FnAddInsuranceExistingOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInsuranceExistingOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            this.FnAddInsuranceExistingOptionalBenefitsAsync(requisitionNo, riskCode, riskoption, amount, null);
        }
        
        /// <remarks/>
        public void FnAddInsuranceExistingOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount, object userState) {
            if ((this.FnAddInsuranceExistingOptionalBenefitsOperationCompleted == null)) {
                this.FnAddInsuranceExistingOptionalBenefitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInsuranceExistingOptionalBenefitsOperationCompleted);
            }
            this.InvokeAsync("FnAddInsuranceExistingOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount}, this.FnAddInsuranceExistingOptionalBenefitsOperationCompleted, userState);
        }
        
        private void OnFnAddInsuranceExistingOptionalBenefitsOperationCompleted(object arg) {
            if ((this.FnAddInsuranceExistingOptionalBenefitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInsuranceExistingOptionalBenefitsCompleted(this, new FnAddInsuranceExistingOptionalBenefitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCheckifGrowerNoExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCheckifGrowerNoExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCheckifGrowerNoExist(string growerNumber) {
            object[] results = this.Invoke("FnCheckifGrowerNoExist", new object[] {
                        growerNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckifGrowerNoExistAsync(string growerNumber) {
            this.FnCheckifGrowerNoExistAsync(growerNumber, null);
        }
        
        /// <remarks/>
        public void FnCheckifGrowerNoExistAsync(string growerNumber, object userState) {
            if ((this.FnCheckifGrowerNoExistOperationCompleted == null)) {
                this.FnCheckifGrowerNoExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckifGrowerNoExistOperationCompleted);
            }
            this.InvokeAsync("FnCheckifGrowerNoExist", new object[] {
                        growerNumber}, this.FnCheckifGrowerNoExistOperationCompleted, userState);
        }
        
        private void OnFnCheckifGrowerNoExistOperationCompleted(object arg) {
            if ((this.FnCheckifGrowerNoExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckifGrowerNoExistCompleted(this, new FnCheckifGrowerNoExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCheckifIdentityNoExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCheckifIdentityNoExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCheckifIdentityNoExist(string growerNumber) {
            object[] results = this.Invoke("FnCheckifIdentityNoExist", new object[] {
                        growerNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckifIdentityNoExistAsync(string growerNumber) {
            this.FnCheckifIdentityNoExistAsync(growerNumber, null);
        }
        
        /// <remarks/>
        public void FnCheckifIdentityNoExistAsync(string growerNumber, object userState) {
            if ((this.FnCheckifIdentityNoExistOperationCompleted == null)) {
                this.FnCheckifIdentityNoExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckifIdentityNoExistOperationCompleted);
            }
            this.InvokeAsync("FnCheckifIdentityNoExist", new object[] {
                        growerNumber}, this.FnCheckifIdentityNoExistOperationCompleted, userState);
        }
        
        private void OnFnCheckifIdentityNoExistOperationCompleted(object arg) {
            if ((this.FnCheckifIdentityNoExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckifIdentityNoExistCompleted(this, new FnCheckifIdentityNoExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCheckifICertifcateNumberExist", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCheckifICertifcateNumberExist_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCheckifICertifcateNumberExist(string certificateNumber) {
            object[] results = this.Invoke("FnCheckifICertifcateNumberExist", new object[] {
                        certificateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckifICertifcateNumberExistAsync(string certificateNumber) {
            this.FnCheckifICertifcateNumberExistAsync(certificateNumber, null);
        }
        
        /// <remarks/>
        public void FnCheckifICertifcateNumberExistAsync(string certificateNumber, object userState) {
            if ((this.FnCheckifICertifcateNumberExistOperationCompleted == null)) {
                this.FnCheckifICertifcateNumberExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckifICertifcateNumberExistOperationCompleted);
            }
            this.InvokeAsync("FnCheckifICertifcateNumberExist", new object[] {
                        certificateNumber}, this.FnCheckifICertifcateNumberExistOperationCompleted, userState);
        }
        
        private void OnFnCheckifICertifcateNumberExistOperationCompleted(object arg) {
            if ((this.FnCheckifICertifcateNumberExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckifICertifcateNumberExistCompleted(this, new FnCheckifICertifcateNumberExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetPolicyEndDate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetPolicyEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime FnGetPolicyEndDate([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, string serviceperiod) {
            object[] results = this.Invoke("FnGetPolicyEndDate", new object[] {
                        policystartDate,
                        serviceperiod});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPolicyEndDateAsync(System.DateTime policystartDate, string serviceperiod) {
            this.FnGetPolicyEndDateAsync(policystartDate, serviceperiod, null);
        }
        
        /// <remarks/>
        public void FnGetPolicyEndDateAsync(System.DateTime policystartDate, string serviceperiod, object userState) {
            if ((this.FnGetPolicyEndDateOperationCompleted == null)) {
                this.FnGetPolicyEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPolicyEndDateOperationCompleted);
            }
            this.InvokeAsync("FnGetPolicyEndDate", new object[] {
                        policystartDate,
                        serviceperiod}, this.FnGetPolicyEndDateOperationCompleted, userState);
        }
        
        private void OnFnGetPolicyEndDateOperationCompleted(object arg) {
            if ((this.FnGetPolicyEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPolicyEndDateCompleted(this, new FnGetPolicyEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetPolicyCalenderDays", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetPolicyCalenderDays_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetPolicyCalenderDays([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policyEndDate) {
            object[] results = this.Invoke("FnGetPolicyCalenderDays", new object[] {
                        policystartDate,
                        policyEndDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPolicyCalenderDaysAsync(System.DateTime policystartDate, System.DateTime policyEndDate) {
            this.FnGetPolicyCalenderDaysAsync(policystartDate, policyEndDate, null);
        }
        
        /// <remarks/>
        public void FnGetPolicyCalenderDaysAsync(System.DateTime policystartDate, System.DateTime policyEndDate, object userState) {
            if ((this.FnGetPolicyCalenderDaysOperationCompleted == null)) {
                this.FnGetPolicyCalenderDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPolicyCalenderDaysOperationCompleted);
            }
            this.InvokeAsync("FnGetPolicyCalenderDays", new object[] {
                        policystartDate,
                        policyEndDate}, this.FnGetPolicyCalenderDaysOperationCompleted, userState);
        }
        
        private void OnFnGetPolicyCalenderDaysOperationCompleted(object arg) {
            if ((this.FnGetPolicyCalenderDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPolicyCalenderDaysCompleted(this, new FnGetPolicyCalenderDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnPolicyAmmendmentsDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnPolicyAmmendmentsDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPolicyAmmendmentsDetails(string policyNumber) {
            object[] results = this.Invoke("FnPolicyAmmendmentsDetails", new object[] {
                        policyNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsDetailsAsync(string policyNumber) {
            this.FnPolicyAmmendmentsDetailsAsync(policyNumber, null);
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsDetailsAsync(string policyNumber, object userState) {
            if ((this.FnPolicyAmmendmentsDetailsOperationCompleted == null)) {
                this.FnPolicyAmmendmentsDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPolicyAmmendmentsDetailsOperationCompleted);
            }
            this.InvokeAsync("FnPolicyAmmendmentsDetails", new object[] {
                        policyNumber}, this.FnPolicyAmmendmentsDetailsOperationCompleted, userState);
        }
        
        private void OnFnPolicyAmmendmentsDetailsOperationCompleted(object arg) {
            if ((this.FnPolicyAmmendmentsDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPolicyAmmendmentsDetailsCompleted(this, new FnPolicyAmmendmentsDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreateClaimValidation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreateClaimValidation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateClaimValidation(string docNo, int eventType, string hospital, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofDischarge, string invoiceNo, decimal invoiceamount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofadmission, string burialpermitNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofdeath, int paymenttype, int reimpbursementType, decimal surgeryBenefit, string tpatientname, string tdeceasedName) {
            object[] results = this.Invoke("FnCreateClaimValidation", new object[] {
                        docNo,
                        eventType,
                        hospital,
                        dateofDischarge,
                        invoiceNo,
                        invoiceamount,
                        dateofadmission,
                        burialpermitNo,
                        dateofdeath,
                        paymenttype,
                        reimpbursementType,
                        surgeryBenefit,
                        tpatientname,
                        tdeceasedName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateClaimValidationAsync(string docNo, int eventType, string hospital, System.DateTime dateofDischarge, string invoiceNo, decimal invoiceamount, System.DateTime dateofadmission, string burialpermitNo, System.DateTime dateofdeath, int paymenttype, int reimpbursementType, decimal surgeryBenefit, string tpatientname, string tdeceasedName) {
            this.FnCreateClaimValidationAsync(docNo, eventType, hospital, dateofDischarge, invoiceNo, invoiceamount, dateofadmission, burialpermitNo, dateofdeath, paymenttype, reimpbursementType, surgeryBenefit, tpatientname, tdeceasedName, null);
        }
        
        /// <remarks/>
        public void FnCreateClaimValidationAsync(string docNo, int eventType, string hospital, System.DateTime dateofDischarge, string invoiceNo, decimal invoiceamount, System.DateTime dateofadmission, string burialpermitNo, System.DateTime dateofdeath, int paymenttype, int reimpbursementType, decimal surgeryBenefit, string tpatientname, string tdeceasedName, object userState) {
            if ((this.FnCreateClaimValidationOperationCompleted == null)) {
                this.FnCreateClaimValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateClaimValidationOperationCompleted);
            }
            this.InvokeAsync("FnCreateClaimValidation", new object[] {
                        docNo,
                        eventType,
                        hospital,
                        dateofDischarge,
                        invoiceNo,
                        invoiceamount,
                        dateofadmission,
                        burialpermitNo,
                        dateofdeath,
                        paymenttype,
                        reimpbursementType,
                        surgeryBenefit,
                        tpatientname,
                        tdeceasedName}, this.FnCreateClaimValidationOperationCompleted, userState);
        }
        
        private void OnFnCreateClaimValidationOperationCompleted(object arg) {
            if ((this.FnCreateClaimValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateClaimValidationCompleted(this, new FnCreateClaimValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewPolicyAmmendmentscorporate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewPolicyAmmendmentscorporate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPolicyAmmendmentscorporate(string contractNumber) {
            object[] results = this.Invoke("FnNewPolicyAmmendmentscorporate", new object[] {
                        contractNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentscorporateAsync(string contractNumber) {
            this.FnNewPolicyAmmendmentscorporateAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentscorporateAsync(string contractNumber, object userState) {
            if ((this.FnNewPolicyAmmendmentscorporateOperationCompleted == null)) {
                this.FnNewPolicyAmmendmentscorporateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPolicyAmmendmentscorporateOperationCompleted);
            }
            this.InvokeAsync("FnNewPolicyAmmendmentscorporate", new object[] {
                        contractNumber}, this.FnNewPolicyAmmendmentscorporateOperationCompleted, userState);
        }
        
        private void OnFnNewPolicyAmmendmentscorporateOperationCompleted(object arg) {
            if ((this.FnNewPolicyAmmendmentscorporateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPolicyAmmendmentscorporateCompleted(this, new FnNewPolicyAmmendmentscorporateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewPolicyAmmendments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewPolicyAmmendments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPolicyAmmendments(string contractNumber, string idnumber, int gender, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, string occupation, int maritalstatus, string county) {
            object[] results = this.Invoke("FnNewPolicyAmmendments", new object[] {
                        contractNumber,
                        idnumber,
                        gender,
                        dob,
                        occupation,
                        maritalstatus,
                        county});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentsAsync(string contractNumber, string idnumber, int gender, System.DateTime dob, string occupation, int maritalstatus, string county) {
            this.FnNewPolicyAmmendmentsAsync(contractNumber, idnumber, gender, dob, occupation, maritalstatus, county, null);
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentsAsync(string contractNumber, string idnumber, int gender, System.DateTime dob, string occupation, int maritalstatus, string county, object userState) {
            if ((this.FnNewPolicyAmmendmentsOperationCompleted == null)) {
                this.FnNewPolicyAmmendmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPolicyAmmendmentsOperationCompleted);
            }
            this.InvokeAsync("FnNewPolicyAmmendments", new object[] {
                        contractNumber,
                        idnumber,
                        gender,
                        dob,
                        occupation,
                        maritalstatus,
                        county}, this.FnNewPolicyAmmendmentsOperationCompleted, userState);
        }
        
        private void OnFnNewPolicyAmmendmentsOperationCompleted(object arg) {
            if ((this.FnNewPolicyAmmendmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPolicyAmmendmentsCompleted(this, new FnNewPolicyAmmendmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnDocumentsValidations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnDocumentsValidations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDocumentsValidations(string applicationNo, bool scannedCopy, bool dependantphoto) {
            object[] results = this.Invoke("FnDocumentsValidations", new object[] {
                        applicationNo,
                        scannedCopy,
                        dependantphoto});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDocumentsValidationsAsync(string applicationNo, bool scannedCopy, bool dependantphoto) {
            this.FnDocumentsValidationsAsync(applicationNo, scannedCopy, dependantphoto, null);
        }
        
        /// <remarks/>
        public void FnDocumentsValidationsAsync(string applicationNo, bool scannedCopy, bool dependantphoto, object userState) {
            if ((this.FnDocumentsValidationsOperationCompleted == null)) {
                this.FnDocumentsValidationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDocumentsValidationsOperationCompleted);
            }
            this.InvokeAsync("FnDocumentsValidations", new object[] {
                        applicationNo,
                        scannedCopy,
                        dependantphoto}, this.FnDocumentsValidationsOperationCompleted, userState);
        }
        
        private void OnFnDocumentsValidationsOperationCompleted(object arg) {
            if ((this.FnDocumentsValidationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDocumentsValidationsCompleted(this, new FnDocumentsValidationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnPolicyAmmendmentsUpdates", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnPolicyAmmendmentsUpdates_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPolicyAmmendmentsUpdates(string quoteNumber, string dhb, int tmodeofpaymentss, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber) {
            object[] results = this.Invoke("FnPolicyAmmendmentsUpdates", new object[] {
                        quoteNumber,
                        dhb,
                        tmodeofpaymentss,
                        tagentDetail,
                        tlblagentsubcategorydetail,
                        tlblsalesgentcode,
                        ttxtrefferalname,
                        ttxtreferalmobilenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsUpdatesAsync(string quoteNumber, string dhb, int tmodeofpaymentss, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber) {
            this.FnPolicyAmmendmentsUpdatesAsync(quoteNumber, dhb, tmodeofpaymentss, tagentDetail, tlblagentsubcategorydetail, tlblsalesgentcode, ttxtrefferalname, ttxtreferalmobilenumber, null);
        }
        
        /// <remarks/>
        public void FnPolicyAmmendmentsUpdatesAsync(string quoteNumber, string dhb, int tmodeofpaymentss, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber, object userState) {
            if ((this.FnPolicyAmmendmentsUpdatesOperationCompleted == null)) {
                this.FnPolicyAmmendmentsUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPolicyAmmendmentsUpdatesOperationCompleted);
            }
            this.InvokeAsync("FnPolicyAmmendmentsUpdates", new object[] {
                        quoteNumber,
                        dhb,
                        tmodeofpaymentss,
                        tagentDetail,
                        tlblagentsubcategorydetail,
                        tlblsalesgentcode,
                        ttxtrefferalname,
                        ttxtreferalmobilenumber}, this.FnPolicyAmmendmentsUpdatesOperationCompleted, userState);
        }
        
        private void OnFnPolicyAmmendmentsUpdatesOperationCompleted(object arg) {
            if ((this.FnPolicyAmmendmentsUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPolicyAmmendmentsUpdatesCompleted(this, new FnPolicyAmmendmentsUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorPolicyAmmendments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorPolicyAmmendments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorPolicyAmmendments(string contractNumber) {
            object[] results = this.Invoke("FnNewMotorPolicyAmmendments", new object[] {
                        contractNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyAmmendmentsAsync(string contractNumber) {
            this.FnNewMotorPolicyAmmendmentsAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyAmmendmentsAsync(string contractNumber, object userState) {
            if ((this.FnNewMotorPolicyAmmendmentsOperationCompleted == null)) {
                this.FnNewMotorPolicyAmmendmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorPolicyAmmendmentsOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorPolicyAmmendments", new object[] {
                        contractNumber}, this.FnNewMotorPolicyAmmendmentsOperationCompleted, userState);
        }
        
        private void OnFnNewMotorPolicyAmmendmentsOperationCompleted(object arg) {
            if ((this.FnNewMotorPolicyAmmendmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorPolicyAmmendmentsCompleted(this, new FnNewMotorPolicyAmmendmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorIndividualPolicyRenewals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorIndividualPolicyRenewals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorIndividualPolicyRenewals(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, int agenDetail, string agentCode, int tModeofPayments, string tPaymentReference, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime tdatepaid, decimal tpaidAmount) {
            object[] results = this.Invoke("FnNewMotorIndividualPolicyRenewals", new object[] {
                        contractNumber,
                        startDate,
                        agenDetail,
                        agentCode,
                        tModeofPayments,
                        tPaymentReference,
                        tdatepaid,
                        tpaidAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorIndividualPolicyRenewalsAsync(string contractNumber, System.DateTime startDate, int agenDetail, string agentCode, int tModeofPayments, string tPaymentReference, System.DateTime tdatepaid, decimal tpaidAmount) {
            this.FnNewMotorIndividualPolicyRenewalsAsync(contractNumber, startDate, agenDetail, agentCode, tModeofPayments, tPaymentReference, tdatepaid, tpaidAmount, null);
        }
        
        /// <remarks/>
        public void FnNewMotorIndividualPolicyRenewalsAsync(string contractNumber, System.DateTime startDate, int agenDetail, string agentCode, int tModeofPayments, string tPaymentReference, System.DateTime tdatepaid, decimal tpaidAmount, object userState) {
            if ((this.FnNewMotorIndividualPolicyRenewalsOperationCompleted == null)) {
                this.FnNewMotorIndividualPolicyRenewalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorIndividualPolicyRenewalsOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorIndividualPolicyRenewals", new object[] {
                        contractNumber,
                        startDate,
                        agenDetail,
                        agentCode,
                        tModeofPayments,
                        tPaymentReference,
                        tdatepaid,
                        tpaidAmount}, this.FnNewMotorIndividualPolicyRenewalsOperationCompleted, userState);
        }
        
        private void OnFnNewMotorIndividualPolicyRenewalsOperationCompleted(object arg) {
            if ((this.FnNewMotorIndividualPolicyRenewalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorIndividualPolicyRenewalsCompleted(this, new FnNewMotorIndividualPolicyRenewalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewQuoteMotorIndividualPolicyRiskDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewQuoteMotorIndividualPolicyRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewQuoteMotorIndividualPolicyRiskDetails(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal txtExcessProtector) {
            object[] results = this.Invoke("FnNewQuoteMotorIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium,
                        txtExcessProtector});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewQuoteMotorIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal txtExcessProtector) {
            this.FnNewQuoteMotorIndividualPolicyRiskDetailsAsync(empNo, docNo, riskNo, registrationNo, make, model, vehicletype, covertype, cc, chasisNo, engineNo, yearofManufucture, bodyType, policystartDate, duration, nonRenewable, tonnage, certificateNo, sumInsured, rate, txtvalued, basicpremium, txtExcessProtector, null);
        }
        
        /// <remarks/>
        public void FnNewQuoteMotorIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal txtExcessProtector, 
                    object userState) {
            if ((this.FnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted == null)) {
                this.FnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewQuoteMotorIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium,
                        txtExcessProtector}, this.FnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewQuoteMotorIndividualPolicyRiskDetailsOperationCompleted(object arg) {
            if ((this.FnNewQuoteMotorIndividualPolicyRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewQuoteMotorIndividualPolicyRiskDetailsCompleted(this, new FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewQuoteMotorExistingIndividualPoli" +
            "cyRiskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewQuoteMotorExistingIndividualPolicyRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewQuoteMotorExistingIndividualPolicyRiskDetails(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal texcessprotector) {
            object[] results = this.Invoke("FnNewQuoteMotorExistingIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium,
                        texcessprotector});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewQuoteMotorExistingIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal texcessprotector) {
            this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsAsync(empNo, docNo, riskNo, registrationNo, make, model, vehicletype, covertype, cc, chasisNo, engineNo, yearofManufucture, bodyType, policystartDate, duration, nonRenewable, tonnage, certificateNo, sumInsured, rate, txtvalued, basicpremium, texcessprotector, null);
        }
        
        /// <remarks/>
        public void FnNewQuoteMotorExistingIndividualPolicyRiskDetailsAsync(
                    string empNo, 
                    string docNo, 
                    string riskNo, 
                    string registrationNo, 
                    string make, 
                    string model, 
                    string vehicletype, 
                    string covertype, 
                    string cc, 
                    string chasisNo, 
                    string engineNo, 
                    string yearofManufucture, 
                    string bodyType, 
                    System.DateTime policystartDate, 
                    string duration, 
                    bool nonRenewable, 
                    decimal tonnage, 
                    string certificateNo, 
                    decimal sumInsured, 
                    decimal rate, 
                    bool txtvalued, 
                    decimal basicpremium, 
                    decimal texcessprotector, 
                    object userState) {
            if ((this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted == null)) {
                this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("FnNewQuoteMotorExistingIndividualPolicyRiskDetails", new object[] {
                        empNo,
                        docNo,
                        riskNo,
                        registrationNo,
                        make,
                        model,
                        vehicletype,
                        covertype,
                        cc,
                        chasisNo,
                        engineNo,
                        yearofManufucture,
                        bodyType,
                        policystartDate,
                        duration,
                        nonRenewable,
                        tonnage,
                        certificateNo,
                        sumInsured,
                        rate,
                        txtvalued,
                        basicpremium,
                        texcessprotector}, this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted, userState);
        }
        
        private void OnFnNewQuoteMotorExistingIndividualPolicyRiskDetailsOperationCompleted(object arg) {
            if ((this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompleted(this, new FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnUpdateMotorIndividualPolicySumInsur" +
            "ed", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnUpdateMotorIndividualPolicySumInsured_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateMotorIndividualPolicySumInsured(string empNo, string docNo, string registrationNo, decimal suminsured) {
            object[] results = this.Invoke("FnUpdateMotorIndividualPolicySumInsured", new object[] {
                        empNo,
                        docNo,
                        registrationNo,
                        suminsured});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateMotorIndividualPolicySumInsuredAsync(string empNo, string docNo, string registrationNo, decimal suminsured) {
            this.FnUpdateMotorIndividualPolicySumInsuredAsync(empNo, docNo, registrationNo, suminsured, null);
        }
        
        /// <remarks/>
        public void FnUpdateMotorIndividualPolicySumInsuredAsync(string empNo, string docNo, string registrationNo, decimal suminsured, object userState) {
            if ((this.FnUpdateMotorIndividualPolicySumInsuredOperationCompleted == null)) {
                this.FnUpdateMotorIndividualPolicySumInsuredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateMotorIndividualPolicySumInsuredOperationCompleted);
            }
            this.InvokeAsync("FnUpdateMotorIndividualPolicySumInsured", new object[] {
                        empNo,
                        docNo,
                        registrationNo,
                        suminsured}, this.FnUpdateMotorIndividualPolicySumInsuredOperationCompleted, userState);
        }
        
        private void OnFnUpdateMotorIndividualPolicySumInsuredOperationCompleted(object arg) {
            if ((this.FnUpdateMotorIndividualPolicySumInsuredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateMotorIndividualPolicySumInsuredCompleted(this, new FnUpdateMotorIndividualPolicySumInsuredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeleteQuoteRiskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeleteQuoteRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteQuoteRiskDetails(string applicationNumber, string registrationNumber) {
            object[] results = this.Invoke("DeleteQuoteRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQuoteRiskDetailsAsync(string applicationNumber, string registrationNumber) {
            this.DeleteQuoteRiskDetailsAsync(applicationNumber, registrationNumber, null);
        }
        
        /// <remarks/>
        public void DeleteQuoteRiskDetailsAsync(string applicationNumber, string registrationNumber, object userState) {
            if ((this.DeleteQuoteRiskDetailsOperationCompleted == null)) {
                this.DeleteQuoteRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQuoteRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("DeleteQuoteRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber}, this.DeleteQuoteRiskDetailsOperationCompleted, userState);
        }
        
        private void OnDeleteQuoteRiskDetailsOperationCompleted(object arg) {
            if ((this.DeleteQuoteRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQuoteRiskDetailsCompleted(this, new DeleteQuoteRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAddMotorAmmendmentsInsuranceOptiona" +
            "lBenefits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAddMotorAmmendmentsInsuranceOptionalBenefits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddMotorAmmendmentsInsuranceOptionalBenefits(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            object[] results = this.Invoke("FnAddMotorAmmendmentsInsuranceOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddMotorAmmendmentsInsuranceOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount) {
            this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsAsync(requisitionNo, riskCode, riskoption, amount, null);
        }
        
        /// <remarks/>
        public void FnAddMotorAmmendmentsInsuranceOptionalBenefitsAsync(string requisitionNo, string riskCode, string riskoption, decimal amount, object userState) {
            if ((this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted == null)) {
                this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted);
            }
            this.InvokeAsync("FnAddMotorAmmendmentsInsuranceOptionalBenefits", new object[] {
                        requisitionNo,
                        riskCode,
                        riskoption,
                        amount}, this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted, userState);
        }
        
        private void OnFnAddMotorAmmendmentsInsuranceOptionalBenefitsOperationCompleted(object arg) {
            if ((this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompleted(this, new FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreateMotorClaimNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreateMotorClaimNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateMotorClaimNotification(string docNo, string tpolicyNo, string custNo, string requestor, string houseNo, string placeofaccident, string mobileNo, System.DateTime dateofaccident) {
            object[] results = this.Invoke("FnCreateMotorClaimNotification", new object[] {
                        docNo,
                        tpolicyNo,
                        custNo,
                        requestor,
                        houseNo,
                        placeofaccident,
                        mobileNo,
                        dateofaccident});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateMotorClaimNotificationAsync(string docNo, string tpolicyNo, string custNo, string requestor, string houseNo, string placeofaccident, string mobileNo, System.DateTime dateofaccident) {
            this.FnCreateMotorClaimNotificationAsync(docNo, tpolicyNo, custNo, requestor, houseNo, placeofaccident, mobileNo, dateofaccident, null);
        }
        
        /// <remarks/>
        public void FnCreateMotorClaimNotificationAsync(string docNo, string tpolicyNo, string custNo, string requestor, string houseNo, string placeofaccident, string mobileNo, System.DateTime dateofaccident, object userState) {
            if ((this.FnCreateMotorClaimNotificationOperationCompleted == null)) {
                this.FnCreateMotorClaimNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateMotorClaimNotificationOperationCompleted);
            }
            this.InvokeAsync("FnCreateMotorClaimNotification", new object[] {
                        docNo,
                        tpolicyNo,
                        custNo,
                        requestor,
                        houseNo,
                        placeofaccident,
                        mobileNo,
                        dateofaccident}, this.FnCreateMotorClaimNotificationOperationCompleted, userState);
        }
        
        private void OnFnCreateMotorClaimNotificationOperationCompleted(object arg) {
            if ((this.FnCreateMotorClaimNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateMotorClaimNotificationCompleted(this, new FnCreateMotorClaimNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCreateClaimMotorValidation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCreateClaimMotorValidation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateClaimMotorValidation(string docNo, string riskcode, string tregistrationNumber, string tmakes, string tmodels, string tyearofmanufacture, string tccnumber, string ttrailernumber, string tcarryingcapacity, string tnameofwner, string taddressofowner) {
            object[] results = this.Invoke("FnCreateClaimMotorValidation", new object[] {
                        docNo,
                        riskcode,
                        tregistrationNumber,
                        tmakes,
                        tmodels,
                        tyearofmanufacture,
                        tccnumber,
                        ttrailernumber,
                        tcarryingcapacity,
                        tnameofwner,
                        taddressofowner});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateClaimMotorValidationAsync(string docNo, string riskcode, string tregistrationNumber, string tmakes, string tmodels, string tyearofmanufacture, string tccnumber, string ttrailernumber, string tcarryingcapacity, string tnameofwner, string taddressofowner) {
            this.FnCreateClaimMotorValidationAsync(docNo, riskcode, tregistrationNumber, tmakes, tmodels, tyearofmanufacture, tccnumber, ttrailernumber, tcarryingcapacity, tnameofwner, taddressofowner, null);
        }
        
        /// <remarks/>
        public void FnCreateClaimMotorValidationAsync(string docNo, string riskcode, string tregistrationNumber, string tmakes, string tmodels, string tyearofmanufacture, string tccnumber, string ttrailernumber, string tcarryingcapacity, string tnameofwner, string taddressofowner, object userState) {
            if ((this.FnCreateClaimMotorValidationOperationCompleted == null)) {
                this.FnCreateClaimMotorValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateClaimMotorValidationOperationCompleted);
            }
            this.InvokeAsync("FnCreateClaimMotorValidation", new object[] {
                        docNo,
                        riskcode,
                        tregistrationNumber,
                        tmakes,
                        tmodels,
                        tyearofmanufacture,
                        tccnumber,
                        ttrailernumber,
                        tcarryingcapacity,
                        tnameofwner,
                        taddressofowner}, this.FnCreateClaimMotorValidationOperationCompleted, userState);
        }
        
        private void OnFnCreateClaimMotorValidationOperationCompleted(object arg) {
            if ((this.FnCreateClaimMotorValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateClaimMotorValidationCompleted(this, new FnCreateClaimMotorValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendMotorAmmendmentIndividualClientAp" +
            "plicationApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendMotorAmmendmentIndividualClientApplicationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendMotorAmmendmentIndividualClientApplicationApproval(string docNumber) {
            object[] results = this.Invoke("SendMotorAmmendmentIndividualClientApplicationApproval", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMotorAmmendmentIndividualClientApplicationApprovalAsync(string docNumber) {
            this.SendMotorAmmendmentIndividualClientApplicationApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendMotorAmmendmentIndividualClientApplicationApprovalAsync(string docNumber, object userState) {
            if ((this.SendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted == null)) {
                this.SendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted);
            }
            this.InvokeAsync("SendMotorAmmendmentIndividualClientApplicationApproval", new object[] {
                        docNumber}, this.SendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted, userState);
        }
        
        private void OnSendMotorAmmendmentIndividualClientApplicationApprovalOperationCompleted(object arg) {
            if ((this.SendMotorAmmendmentIndividualClientApplicationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMotorAmmendmentIndividualClientApplicationApprovalCompleted(this, new SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendMotoRenewalIndividualClientApplic" +
            "ationApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendMotoRenewalIndividualClientApplicationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendMotoRenewalIndividualClientApplicationApproval(string docNumber) {
            object[] results = this.Invoke("SendMotoRenewalIndividualClientApplicationApproval", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMotoRenewalIndividualClientApplicationApprovalAsync(string docNumber) {
            this.SendMotoRenewalIndividualClientApplicationApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendMotoRenewalIndividualClientApplicationApprovalAsync(string docNumber, object userState) {
            if ((this.SendMotoRenewalIndividualClientApplicationApprovalOperationCompleted == null)) {
                this.SendMotoRenewalIndividualClientApplicationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMotoRenewalIndividualClientApplicationApprovalOperationCompleted);
            }
            this.InvokeAsync("SendMotoRenewalIndividualClientApplicationApproval", new object[] {
                        docNumber}, this.SendMotoRenewalIndividualClientApplicationApprovalOperationCompleted, userState);
        }
        
        private void OnSendMotoRenewalIndividualClientApplicationApprovalOperationCompleted(object arg) {
            if ((this.SendMotoRenewalIndividualClientApplicationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMotoRenewalIndividualClientApplicationApprovalCompleted(this, new SendMotoRenewalIndividualClientApplicationApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewMotorPolicyExistingBusiness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewMotorPolicyExistingBusiness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewMotorPolicyExistingBusiness(string customerNumber) {
            object[] results = this.Invoke("FnNewMotorPolicyExistingBusiness", new object[] {
                        customerNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyExistingBusinessAsync(string customerNumber) {
            this.FnNewMotorPolicyExistingBusinessAsync(customerNumber, null);
        }
        
        /// <remarks/>
        public void FnNewMotorPolicyExistingBusinessAsync(string customerNumber, object userState) {
            if ((this.FnNewMotorPolicyExistingBusinessOperationCompleted == null)) {
                this.FnNewMotorPolicyExistingBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewMotorPolicyExistingBusinessOperationCompleted);
            }
            this.InvokeAsync("FnNewMotorPolicyExistingBusiness", new object[] {
                        customerNumber}, this.FnNewMotorPolicyExistingBusinessOperationCompleted, userState);
        }
        
        private void OnFnNewMotorPolicyExistingBusinessOperationCompleted(object arg) {
            if ((this.FnNewMotorPolicyExistingBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewMotorPolicyExistingBusinessCompleted(this, new FnNewMotorPolicyExistingBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnIndividualMotorupdatePolicyExisting" +
            "Details", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnIndividualMotorupdatePolicyExistingDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIndividualMotorupdatePolicyExistingDetails(
                    string docNo, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datepaid, 
                    string paymentreference, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDate, 
                    int paymentoptions, 
                    string bindercode, 
                    decimal premiumratings, 
                    string policynumber, 
                    string remarks) {
            object[] results = this.Invoke("FnIndividualMotorupdatePolicyExistingDetails", new object[] {
                        docNo,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        bindercode,
                        premiumratings,
                        policynumber,
                        remarks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyExistingDetailsAsync(
                    string docNo, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string bindercode, 
                    decimal premiumratings, 
                    string policynumber, 
                    string remarks) {
            this.FnIndividualMotorupdatePolicyExistingDetailsAsync(docNo, applicantType, product, paymentMode, financier, invoicePeriod, memberType, agentDetail, agentcode, referralIdNumber, referralName, referralMobileNumber, nonrenewable, hasbinder, binderfeeRate, commissionrate, paidamount, datepaid, paymentreference, policystartDate, paymentoptions, bindercode, premiumratings, policynumber, remarks, null);
        }
        
        /// <remarks/>
        public void FnIndividualMotorupdatePolicyExistingDetailsAsync(
                    string docNo, 
                    string applicantType, 
                    string product, 
                    int paymentMode, 
                    string financier, 
                    int invoicePeriod, 
                    int memberType, 
                    int agentDetail, 
                    string agentcode, 
                    string referralIdNumber, 
                    string referralName, 
                    string referralMobileNumber, 
                    bool nonrenewable, 
                    int hasbinder, 
                    decimal binderfeeRate, 
                    decimal commissionrate, 
                    decimal paidamount, 
                    System.DateTime datepaid, 
                    string paymentreference, 
                    System.DateTime policystartDate, 
                    int paymentoptions, 
                    string bindercode, 
                    decimal premiumratings, 
                    string policynumber, 
                    string remarks, 
                    object userState) {
            if ((this.FnIndividualMotorupdatePolicyExistingDetailsOperationCompleted == null)) {
                this.FnIndividualMotorupdatePolicyExistingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIndividualMotorupdatePolicyExistingDetailsOperationCompleted);
            }
            this.InvokeAsync("FnIndividualMotorupdatePolicyExistingDetails", new object[] {
                        docNo,
                        applicantType,
                        product,
                        paymentMode,
                        financier,
                        invoicePeriod,
                        memberType,
                        agentDetail,
                        agentcode,
                        referralIdNumber,
                        referralName,
                        referralMobileNumber,
                        nonrenewable,
                        hasbinder,
                        binderfeeRate,
                        commissionrate,
                        paidamount,
                        datepaid,
                        paymentreference,
                        policystartDate,
                        paymentoptions,
                        bindercode,
                        premiumratings,
                        policynumber,
                        remarks}, this.FnIndividualMotorupdatePolicyExistingDetailsOperationCompleted, userState);
        }
        
        private void OnFnIndividualMotorupdatePolicyExistingDetailsOperationCompleted(object arg) {
            if ((this.FnIndividualMotorupdatePolicyExistingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIndividualMotorupdatePolicyExistingDetailsCompleted(this, new FnIndividualMotorupdatePolicyExistingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnMotorPolicyAmmendmentsUpdates", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnMotorPolicyAmmendmentsUpdates_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMotorPolicyAmmendmentsUpdates(string quoteNumber, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber) {
            object[] results = this.Invoke("FnMotorPolicyAmmendmentsUpdates", new object[] {
                        quoteNumber,
                        tagentDetail,
                        tlblagentsubcategorydetail,
                        tlblsalesgentcode,
                        ttxtrefferalname,
                        ttxtreferalmobilenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMotorPolicyAmmendmentsUpdatesAsync(string quoteNumber, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber) {
            this.FnMotorPolicyAmmendmentsUpdatesAsync(quoteNumber, tagentDetail, tlblagentsubcategorydetail, tlblsalesgentcode, ttxtrefferalname, ttxtreferalmobilenumber, null);
        }
        
        /// <remarks/>
        public void FnMotorPolicyAmmendmentsUpdatesAsync(string quoteNumber, int tagentDetail, string tlblagentsubcategorydetail, string tlblsalesgentcode, string ttxtrefferalname, int ttxtreferalmobilenumber, object userState) {
            if ((this.FnMotorPolicyAmmendmentsUpdatesOperationCompleted == null)) {
                this.FnMotorPolicyAmmendmentsUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMotorPolicyAmmendmentsUpdatesOperationCompleted);
            }
            this.InvokeAsync("FnMotorPolicyAmmendmentsUpdates", new object[] {
                        quoteNumber,
                        tagentDetail,
                        tlblagentsubcategorydetail,
                        tlblsalesgentcode,
                        ttxtrefferalname,
                        ttxtreferalmobilenumber}, this.FnMotorPolicyAmmendmentsUpdatesOperationCompleted, userState);
        }
        
        private void OnFnMotorPolicyAmmendmentsUpdatesOperationCompleted(object arg) {
            if ((this.FnMotorPolicyAmmendmentsUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMotorPolicyAmmendmentsUpdatesCompleted(this, new FnMotorPolicyAmmendmentsUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnMotorPolicyAmmendmentsContactsUpdat" +
            "es", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnMotorPolicyAmmendmentsContactsUpdates_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMotorPolicyAmmendmentsContactsUpdates(string quoteNumber, string telephoneNumber2) {
            object[] results = this.Invoke("FnMotorPolicyAmmendmentsContactsUpdates", new object[] {
                        quoteNumber,
                        telephoneNumber2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMotorPolicyAmmendmentsContactsUpdatesAsync(string quoteNumber, string telephoneNumber2) {
            this.FnMotorPolicyAmmendmentsContactsUpdatesAsync(quoteNumber, telephoneNumber2, null);
        }
        
        /// <remarks/>
        public void FnMotorPolicyAmmendmentsContactsUpdatesAsync(string quoteNumber, string telephoneNumber2, object userState) {
            if ((this.FnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted == null)) {
                this.FnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted);
            }
            this.InvokeAsync("FnMotorPolicyAmmendmentsContactsUpdates", new object[] {
                        quoteNumber,
                        telephoneNumber2}, this.FnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted, userState);
        }
        
        private void OnFnMotorPolicyAmmendmentsContactsUpdatesOperationCompleted(object arg) {
            if ((this.FnMotorPolicyAmmendmentsContactsUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMotorPolicyAmmendmentsContactsUpdatesCompleted(this, new FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:DeactivateQuoteRiskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="DeactivateQuoteRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeactivateQuoteRiskDetails(string applicationNumber, string registrationNumber) {
            object[] results = this.Invoke("DeactivateQuoteRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeactivateQuoteRiskDetailsAsync(string applicationNumber, string registrationNumber) {
            this.DeactivateQuoteRiskDetailsAsync(applicationNumber, registrationNumber, null);
        }
        
        /// <remarks/>
        public void DeactivateQuoteRiskDetailsAsync(string applicationNumber, string registrationNumber, object userState) {
            if ((this.DeactivateQuoteRiskDetailsOperationCompleted == null)) {
                this.DeactivateQuoteRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeactivateQuoteRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("DeactivateQuoteRiskDetails", new object[] {
                        applicationNumber,
                        registrationNumber}, this.DeactivateQuoteRiskDetailsOperationCompleted, userState);
        }
        
        private void OnDeactivateQuoteRiskDetailsOperationCompleted(object arg) {
            if ((this.DeactivateQuoteRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeactivateQuoteRiskDetailsCompleted(this, new DeactivateQuoteRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:GenerateDebitNote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="GenerateDebitNote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateDebitNote(string debitNoteNumber) {
            object[] results = this.Invoke("GenerateDebitNote", new object[] {
                        debitNoteNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDebitNoteAsync(string debitNoteNumber) {
            this.GenerateDebitNoteAsync(debitNoteNumber, null);
        }
        
        /// <remarks/>
        public void GenerateDebitNoteAsync(string debitNoteNumber, object userState) {
            if ((this.GenerateDebitNoteOperationCompleted == null)) {
                this.GenerateDebitNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDebitNoteOperationCompleted);
            }
            this.InvokeAsync("GenerateDebitNote", new object[] {
                        debitNoteNumber}, this.GenerateDebitNoteOperationCompleted, userState);
        }
        
        private void OnGenerateDebitNoteOperationCompleted(object arg) {
            if ((this.GenerateDebitNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDebitNoteCompleted(this, new GenerateDebitNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:GenerateRiskNote", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="GenerateRiskNote_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRiskNote(string debitNoteNumber) {
            object[] results = this.Invoke("GenerateRiskNote", new object[] {
                        debitNoteNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRiskNoteAsync(string debitNoteNumber) {
            this.GenerateRiskNoteAsync(debitNoteNumber, null);
        }
        
        /// <remarks/>
        public void GenerateRiskNoteAsync(string debitNoteNumber, object userState) {
            if ((this.GenerateRiskNoteOperationCompleted == null)) {
                this.GenerateRiskNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRiskNoteOperationCompleted);
            }
            this.InvokeAsync("GenerateRiskNote", new object[] {
                        debitNoteNumber}, this.GenerateRiskNoteOperationCompleted, userState);
        }
        
        private void OnGenerateRiskNoteOperationCompleted(object arg) {
            if ((this.GenerateRiskNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRiskNoteCompleted(this, new GenerateRiskNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetBasicPremium", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetBasicPremium_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnGetBasicPremium(string applicationNo, string coverType, decimal tonnage) {
            object[] results = this.Invoke("FnGetBasicPremium", new object[] {
                        applicationNo,
                        coverType,
                        tonnage});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetBasicPremiumAsync(string applicationNo, string coverType, decimal tonnage) {
            this.FnGetBasicPremiumAsync(applicationNo, coverType, tonnage, null);
        }
        
        /// <remarks/>
        public void FnGetBasicPremiumAsync(string applicationNo, string coverType, decimal tonnage, object userState) {
            if ((this.FnGetBasicPremiumOperationCompleted == null)) {
                this.FnGetBasicPremiumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetBasicPremiumOperationCompleted);
            }
            this.InvokeAsync("FnGetBasicPremium", new object[] {
                        applicationNo,
                        coverType,
                        tonnage}, this.FnGetBasicPremiumOperationCompleted, userState);
        }
        
        private void OnFnGetBasicPremiumOperationCompleted(object arg) {
            if ((this.FnGetBasicPremiumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetBasicPremiumCompleted(this, new FnGetBasicPremiumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetBasicPremiumQuotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetBasicPremiumQuotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnGetBasicPremiumQuotes(string applicationNo, string coverType, decimal tonnage) {
            object[] results = this.Invoke("FnGetBasicPremiumQuotes", new object[] {
                        applicationNo,
                        coverType,
                        tonnage});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetBasicPremiumQuotesAsync(string applicationNo, string coverType, decimal tonnage) {
            this.FnGetBasicPremiumQuotesAsync(applicationNo, coverType, tonnage, null);
        }
        
        /// <remarks/>
        public void FnGetBasicPremiumQuotesAsync(string applicationNo, string coverType, decimal tonnage, object userState) {
            if ((this.FnGetBasicPremiumQuotesOperationCompleted == null)) {
                this.FnGetBasicPremiumQuotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetBasicPremiumQuotesOperationCompleted);
            }
            this.InvokeAsync("FnGetBasicPremiumQuotes", new object[] {
                        applicationNo,
                        coverType,
                        tonnage}, this.FnGetBasicPremiumQuotesOperationCompleted, userState);
        }
        
        private void OnFnGetBasicPremiumQuotesOperationCompleted(object arg) {
            if ((this.FnGetBasicPremiumQuotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetBasicPremiumQuotesCompleted(this, new FnGetBasicPremiumQuotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnKYMWithdrawal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnKYMWithdrawal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnKYMWithdrawal(string customerNo, string contractNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofwithdrawal, int statusofammendment, int statusofammendmentreason) {
            object[] results = this.Invoke("FnKYMWithdrawal", new object[] {
                        customerNo,
                        contractNo,
                        dateofwithdrawal,
                        statusofammendment,
                        statusofammendmentreason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnKYMWithdrawalAsync(string customerNo, string contractNo, System.DateTime dateofwithdrawal, int statusofammendment, int statusofammendmentreason) {
            this.FnKYMWithdrawalAsync(customerNo, contractNo, dateofwithdrawal, statusofammendment, statusofammendmentreason, null);
        }
        
        /// <remarks/>
        public void FnKYMWithdrawalAsync(string customerNo, string contractNo, System.DateTime dateofwithdrawal, int statusofammendment, int statusofammendmentreason, object userState) {
            if ((this.FnKYMWithdrawalOperationCompleted == null)) {
                this.FnKYMWithdrawalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnKYMWithdrawalOperationCompleted);
            }
            this.InvokeAsync("FnKYMWithdrawal", new object[] {
                        customerNo,
                        contractNo,
                        dateofwithdrawal,
                        statusofammendment,
                        statusofammendmentreason}, this.FnKYMWithdrawalOperationCompleted, userState);
        }
        
        private void OnFnKYMWithdrawalOperationCompleted(object arg) {
            if ((this.FnKYMWithdrawalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnKYMWithdrawalCompleted(this, new FnKYMWithdrawalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnMotorGeneralDetailsExtension", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnMotorGeneralDetailsExtension_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMotorGeneralDetailsExtension(string customerNo, string contractNo, decimal paymentamount, string paymwntreference, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime datepaid) {
            object[] results = this.Invoke("FnMotorGeneralDetailsExtension", new object[] {
                        customerNo,
                        contractNo,
                        paymentamount,
                        paymwntreference,
                        datepaid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMotorGeneralDetailsExtensionAsync(string customerNo, string contractNo, decimal paymentamount, string paymwntreference, System.DateTime datepaid) {
            this.FnMotorGeneralDetailsExtensionAsync(customerNo, contractNo, paymentamount, paymwntreference, datepaid, null);
        }
        
        /// <remarks/>
        public void FnMotorGeneralDetailsExtensionAsync(string customerNo, string contractNo, decimal paymentamount, string paymwntreference, System.DateTime datepaid, object userState) {
            if ((this.FnMotorGeneralDetailsExtensionOperationCompleted == null)) {
                this.FnMotorGeneralDetailsExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMotorGeneralDetailsExtensionOperationCompleted);
            }
            this.InvokeAsync("FnMotorGeneralDetailsExtension", new object[] {
                        customerNo,
                        contractNo,
                        paymentamount,
                        paymwntreference,
                        datepaid}, this.FnMotorGeneralDetailsExtensionOperationCompleted, userState);
        }
        
        private void OnFnMotorGeneralDetailsExtensionOperationCompleted(object arg) {
            if ((this.FnMotorGeneralDetailsExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMotorGeneralDetailsExtensionCompleted(this, new FnMotorGeneralDetailsExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnMotorExtensionVehicleDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnMotorExtensionVehicleDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMotorExtensionVehicleDetails(string riskCode, string extensionNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, int period) {
            object[] results = this.Invoke("FnMotorExtensionVehicleDetails", new object[] {
                        riskCode,
                        extensionNo,
                        startDate,
                        period});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMotorExtensionVehicleDetailsAsync(string riskCode, string extensionNo, System.DateTime startDate, int period) {
            this.FnMotorExtensionVehicleDetailsAsync(riskCode, extensionNo, startDate, period, null);
        }
        
        /// <remarks/>
        public void FnMotorExtensionVehicleDetailsAsync(string riskCode, string extensionNo, System.DateTime startDate, int period, object userState) {
            if ((this.FnMotorExtensionVehicleDetailsOperationCompleted == null)) {
                this.FnMotorExtensionVehicleDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMotorExtensionVehicleDetailsOperationCompleted);
            }
            this.InvokeAsync("FnMotorExtensionVehicleDetails", new object[] {
                        riskCode,
                        extensionNo,
                        startDate,
                        period}, this.FnMotorExtensionVehicleDetailsOperationCompleted, userState);
        }
        
        private void OnFnMotorExtensionVehicleDetailsOperationCompleted(object arg) {
            if ((this.FnMotorExtensionVehicleDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMotorExtensionVehicleDetailsCompleted(this, new FnMotorExtensionVehicleDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnTransferRiskDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnTransferRiskDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTransferRiskDetails(string contractNo, string riskCode, string clientApplicationNo) {
            object[] results = this.Invoke("FnTransferRiskDetails", new object[] {
                        contractNo,
                        riskCode,
                        clientApplicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTransferRiskDetailsAsync(string contractNo, string riskCode, string clientApplicationNo) {
            this.FnTransferRiskDetailsAsync(contractNo, riskCode, clientApplicationNo, null);
        }
        
        /// <remarks/>
        public void FnTransferRiskDetailsAsync(string contractNo, string riskCode, string clientApplicationNo, object userState) {
            if ((this.FnTransferRiskDetailsOperationCompleted == null)) {
                this.FnTransferRiskDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTransferRiskDetailsOperationCompleted);
            }
            this.InvokeAsync("FnTransferRiskDetails", new object[] {
                        contractNo,
                        riskCode,
                        clientApplicationNo}, this.FnTransferRiskDetailsOperationCompleted, userState);
        }
        
        private void OnFnTransferRiskDetailsOperationCompleted(object arg) {
            if ((this.FnTransferRiskDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTransferRiskDetailsCompleted(this, new FnTransferRiskDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendIndividualMotorAmmendmentApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendIndividualMotorAmmendmentApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendIndividualMotorAmmendmentApproval(string docNumber) {
            object[] results = this.Invoke("SendIndividualMotorAmmendmentApproval", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendIndividualMotorAmmendmentApprovalAsync(string docNumber) {
            this.SendIndividualMotorAmmendmentApprovalAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendIndividualMotorAmmendmentApprovalAsync(string docNumber, object userState) {
            if ((this.SendIndividualMotorAmmendmentApprovalOperationCompleted == null)) {
                this.SendIndividualMotorAmmendmentApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIndividualMotorAmmendmentApprovalOperationCompleted);
            }
            this.InvokeAsync("SendIndividualMotorAmmendmentApproval", new object[] {
                        docNumber}, this.SendIndividualMotorAmmendmentApprovalOperationCompleted, userState);
        }
        
        private void OnSendIndividualMotorAmmendmentApprovalOperationCompleted(object arg) {
            if ((this.SendIndividualMotorAmmendmentApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIndividualMotorAmmendmentApprovalCompleted(this, new SendIndividualMotorAmmendmentApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetCustomersList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetCustomersList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCustomersList(string empBrachCode) {
            object[] results = this.Invoke("FnGetCustomersList", new object[] {
                        empBrachCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCustomersListAsync(string empBrachCode) {
            this.FnGetCustomersListAsync(empBrachCode, null);
        }
        
        /// <remarks/>
        public void FnGetCustomersListAsync(string empBrachCode, object userState) {
            if ((this.FnGetCustomersListOperationCompleted == null)) {
                this.FnGetCustomersListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCustomersListOperationCompleted);
            }
            this.InvokeAsync("FnGetCustomersList", new object[] {
                        empBrachCode}, this.FnGetCustomersListOperationCompleted, userState);
        }
        
        private void OnFnGetCustomersListOperationCompleted(object arg) {
            if ((this.FnGetCustomersListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCustomersListCompleted(this, new FnGetCustomersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnCustomerList", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnCustomerList_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCustomerList(string empBrachCode, string profileType) {
            object[] results = this.Invoke("FnCustomerList", new object[] {
                        empBrachCode,
                        profileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCustomerListAsync(string empBrachCode, string profileType) {
            this.FnCustomerListAsync(empBrachCode, profileType, null);
        }
        
        /// <remarks/>
        public void FnCustomerListAsync(string empBrachCode, string profileType, object userState) {
            if ((this.FnCustomerListOperationCompleted == null)) {
                this.FnCustomerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCustomerListOperationCompleted);
            }
            this.InvokeAsync("FnCustomerList", new object[] {
                        empBrachCode,
                        profileType}, this.FnCustomerListOperationCompleted, userState);
        }
        
        private void OnFnCustomerListOperationCompleted(object arg) {
            if ((this.FnCustomerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCustomerListCompleted(this, new FnCustomerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetServiceContracts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetServiceContracts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetServiceContracts(string branchName, string profileType) {
            object[] results = this.Invoke("FnGetServiceContracts", new object[] {
                        branchName,
                        profileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetServiceContractsAsync(string branchName, string profileType) {
            this.FnGetServiceContractsAsync(branchName, profileType, null);
        }
        
        /// <remarks/>
        public void FnGetServiceContractsAsync(string branchName, string profileType, object userState) {
            if ((this.FnGetServiceContractsOperationCompleted == null)) {
                this.FnGetServiceContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetServiceContractsOperationCompleted);
            }
            this.InvokeAsync("FnGetServiceContracts", new object[] {
                        branchName,
                        profileType}, this.FnGetServiceContractsOperationCompleted, userState);
        }
        
        private void OnFnGetServiceContractsOperationCompleted(object arg) {
            if ((this.FnGetServiceContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetServiceContractsCompleted(this, new FnGetServiceContractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetKTDAFarmers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetKTDAFarmers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetKTDAFarmers(string factoryname) {
            object[] results = this.Invoke("FnGetKTDAFarmers", new object[] {
                        factoryname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetKTDAFarmersAsync(string factoryname) {
            this.FnGetKTDAFarmersAsync(factoryname, null);
        }
        
        /// <remarks/>
        public void FnGetKTDAFarmersAsync(string factoryname, object userState) {
            if ((this.FnGetKTDAFarmersOperationCompleted == null)) {
                this.FnGetKTDAFarmersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetKTDAFarmersOperationCompleted);
            }
            this.InvokeAsync("FnGetKTDAFarmers", new object[] {
                        factoryname}, this.FnGetKTDAFarmersOperationCompleted, userState);
        }
        
        private void OnFnGetKTDAFarmersOperationCompleted(object arg) {
            if ((this.FnGetKTDAFarmersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetKTDAFarmersCompleted(this, new FnGetKTDAFarmersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnComputeKymPremium", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnComputeKymPremium_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnComputeKymPremium(string docNo) {
            object[] results = this.Invoke("FnComputeKymPremium", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnComputeKymPremiumAsync(string docNo) {
            this.FnComputeKymPremiumAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnComputeKymPremiumAsync(string docNo, object userState) {
            if ((this.FnComputeKymPremiumOperationCompleted == null)) {
                this.FnComputeKymPremiumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnComputeKymPremiumOperationCompleted);
            }
            this.InvokeAsync("FnComputeKymPremium", new object[] {
                        docNo}, this.FnComputeKymPremiumOperationCompleted, userState);
        }
        
        private void OnFnComputeKymPremiumOperationCompleted(object arg) {
            if ((this.FnComputeKymPremiumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnComputeKymPremiumCompleted(this, new FnComputeKymPremiumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnInsertPrinciplePhoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnInsertPrinciplePhoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPrinciplePhoto(string docNo, string picName, string growernumber, string principleName) {
            object[] results = this.Invoke("FnInsertPrinciplePhoto", new object[] {
                        docNo,
                        picName,
                        growernumber,
                        principleName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPrinciplePhotoAsync(string docNo, string picName, string growernumber, string principleName) {
            this.FnInsertPrinciplePhotoAsync(docNo, picName, growernumber, principleName, null);
        }
        
        /// <remarks/>
        public void FnInsertPrinciplePhotoAsync(string docNo, string picName, string growernumber, string principleName, object userState) {
            if ((this.FnInsertPrinciplePhotoOperationCompleted == null)) {
                this.FnInsertPrinciplePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPrinciplePhotoOperationCompleted);
            }
            this.InvokeAsync("FnInsertPrinciplePhoto", new object[] {
                        docNo,
                        picName,
                        growernumber,
                        principleName}, this.FnInsertPrinciplePhotoOperationCompleted, userState);
        }
        
        private void OnFnInsertPrinciplePhotoOperationCompleted(object arg) {
            if ((this.FnInsertPrinciplePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPrinciplePhotoCompleted(this, new FnInsertPrinciplePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnInsertDependentPhoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnInsertDependentPhoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertDependentPhoto(string docNo, string picName, string dependantCode, string growernumber) {
            object[] results = this.Invoke("FnInsertDependentPhoto", new object[] {
                        docNo,
                        picName,
                        dependantCode,
                        growernumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertDependentPhotoAsync(string docNo, string picName, string dependantCode, string growernumber) {
            this.FnInsertDependentPhotoAsync(docNo, picName, dependantCode, growernumber, null);
        }
        
        /// <remarks/>
        public void FnInsertDependentPhotoAsync(string docNo, string picName, string dependantCode, string growernumber, object userState) {
            if ((this.FnInsertDependentPhotoOperationCompleted == null)) {
                this.FnInsertDependentPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertDependentPhotoOperationCompleted);
            }
            this.InvokeAsync("FnInsertDependentPhoto", new object[] {
                        docNo,
                        picName,
                        dependantCode,
                        growernumber}, this.FnInsertDependentPhotoOperationCompleted, userState);
        }
        
        private void OnFnInsertDependentPhotoOperationCompleted(object arg) {
            if ((this.FnInsertDependentPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertDependentPhotoCompleted(this, new FnInsertDependentPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewAgricultureOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewAgricultureOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewAgricultureOnboadingRequests(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    string residentialLocat, 
                    string officeLoc, 
                    int wealthSource, 
                    int incomeSource, 
                    string mpesaNo) {
            object[] results = this.Invoke("FnewAgricultureOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        residentialLocat,
                        officeLoc,
                        wealthSource,
                        incomeSource,
                        mpesaNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewAgricultureOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    string residentialLocat, 
                    string officeLoc, 
                    int wealthSource, 
                    int incomeSource, 
                    string mpesaNo) {
            this.FnewAgricultureOnboadingRequestsAsync(docNo, empNo, cust_category, cust_sub_category, id_Type, id_passport, pinNo, title, firstName, middleName, lastname, countryOfResidence, dOB, gender, countyCode, maritalStatus, hudumaNo, applicanttype, occupation, residentialLocat, officeLoc, wealthSource, incomeSource, mpesaNo, null);
        }
        
        /// <remarks/>
        public void FnewAgricultureOnboadingRequestsAsync(
                    string docNo, 
                    string empNo, 
                    string cust_category, 
                    string cust_sub_category, 
                    int id_Type, 
                    string id_passport, 
                    string pinNo, 
                    int title, 
                    string firstName, 
                    string middleName, 
                    string lastname, 
                    string countryOfResidence, 
                    System.DateTime dOB, 
                    int gender, 
                    string countyCode, 
                    int maritalStatus, 
                    string hudumaNo, 
                    string applicanttype, 
                    string occupation, 
                    string residentialLocat, 
                    string officeLoc, 
                    int wealthSource, 
                    int incomeSource, 
                    string mpesaNo, 
                    object userState) {
            if ((this.FnewAgricultureOnboadingRequestsOperationCompleted == null)) {
                this.FnewAgricultureOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewAgricultureOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewAgricultureOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        id_Type,
                        id_passport,
                        pinNo,
                        title,
                        firstName,
                        middleName,
                        lastname,
                        countryOfResidence,
                        dOB,
                        gender,
                        countyCode,
                        maritalStatus,
                        hudumaNo,
                        applicanttype,
                        occupation,
                        residentialLocat,
                        officeLoc,
                        wealthSource,
                        incomeSource,
                        mpesaNo}, this.FnewAgricultureOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewAgricultureOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewAgricultureOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewAgricultureOnboadingRequestsCompleted(this, new FnewAgricultureOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnIndividualupdateAgriculturePolicyDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnIndividualupdateAgriculturePolicyDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnIndividualupdateAgriculturePolicyDetails(
                    string docNo, 
                    string financier, 
                    string product, 
                    int modepayment, 
                    int agentDetail, 
                    string paymentRef, 
                    string salesagentCode, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime policystartDtae, 
                    int paymentOptions, 
                    decimal premiumReating, 
                    string insurer, 
                    int hasbinder, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    bool hasgrowerNo) {
            object[] results = this.Invoke("FnIndividualupdateAgriculturePolicyDetails", new object[] {
                        docNo,
                        financier,
                        product,
                        modepayment,
                        agentDetail,
                        paymentRef,
                        salesagentCode,
                        policystartDtae,
                        paymentOptions,
                        premiumReating,
                        insurer,
                        hasbinder,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        hasgrowerNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnIndividualupdateAgriculturePolicyDetailsAsync(
                    string docNo, 
                    string financier, 
                    string product, 
                    int modepayment, 
                    int agentDetail, 
                    string paymentRef, 
                    string salesagentCode, 
                    System.DateTime policystartDtae, 
                    int paymentOptions, 
                    decimal premiumReating, 
                    string insurer, 
                    int hasbinder, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    bool hasgrowerNo) {
            this.FnIndividualupdateAgriculturePolicyDetailsAsync(docNo, financier, product, modepayment, agentDetail, paymentRef, salesagentCode, policystartDtae, paymentOptions, premiumReating, insurer, hasbinder, growerapplicanttype, growerNumber, factoryCode, factoryName, hasgrowerNo, null);
        }
        
        /// <remarks/>
        public void FnIndividualupdateAgriculturePolicyDetailsAsync(
                    string docNo, 
                    string financier, 
                    string product, 
                    int modepayment, 
                    int agentDetail, 
                    string paymentRef, 
                    string salesagentCode, 
                    System.DateTime policystartDtae, 
                    int paymentOptions, 
                    decimal premiumReating, 
                    string insurer, 
                    int hasbinder, 
                    int growerapplicanttype, 
                    string growerNumber, 
                    string factoryCode, 
                    string factoryName, 
                    bool hasgrowerNo, 
                    object userState) {
            if ((this.FnIndividualupdateAgriculturePolicyDetailsOperationCompleted == null)) {
                this.FnIndividualupdateAgriculturePolicyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnIndividualupdateAgriculturePolicyDetailsOperationCompleted);
            }
            this.InvokeAsync("FnIndividualupdateAgriculturePolicyDetails", new object[] {
                        docNo,
                        financier,
                        product,
                        modepayment,
                        agentDetail,
                        paymentRef,
                        salesagentCode,
                        policystartDtae,
                        paymentOptions,
                        premiumReating,
                        insurer,
                        hasbinder,
                        growerapplicanttype,
                        growerNumber,
                        factoryCode,
                        factoryName,
                        hasgrowerNo}, this.FnIndividualupdateAgriculturePolicyDetailsOperationCompleted, userState);
        }
        
        private void OnFnIndividualupdateAgriculturePolicyDetailsOperationCompleted(object arg) {
            if ((this.FnIndividualupdateAgriculturePolicyDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnIndividualupdateAgriculturePolicyDetailsCompleted(this, new FnIndividualupdateAgriculturePolicyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnInsterAgricultureDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnInsterAgricultureDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsterAgricultureDetails(string docNo, string livestockName, string livestock, string earTag, string breed, int sex, decimal ageinYears, string milkProd, decimal valueInsured, string product) {
            object[] results = this.Invoke("FnInsterAgricultureDetails", new object[] {
                        docNo,
                        livestockName,
                        livestock,
                        earTag,
                        breed,
                        sex,
                        ageinYears,
                        milkProd,
                        valueInsured,
                        product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsterAgricultureDetailsAsync(string docNo, string livestockName, string livestock, string earTag, string breed, int sex, decimal ageinYears, string milkProd, decimal valueInsured, string product) {
            this.FnInsterAgricultureDetailsAsync(docNo, livestockName, livestock, earTag, breed, sex, ageinYears, milkProd, valueInsured, product, null);
        }
        
        /// <remarks/>
        public void FnInsterAgricultureDetailsAsync(string docNo, string livestockName, string livestock, string earTag, string breed, int sex, decimal ageinYears, string milkProd, decimal valueInsured, string product, object userState) {
            if ((this.FnInsterAgricultureDetailsOperationCompleted == null)) {
                this.FnInsterAgricultureDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsterAgricultureDetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsterAgricultureDetails", new object[] {
                        docNo,
                        livestockName,
                        livestock,
                        earTag,
                        breed,
                        sex,
                        ageinYears,
                        milkProd,
                        valueInsured,
                        product}, this.FnInsterAgricultureDetailsOperationCompleted, userState);
        }
        
        private void OnFnInsterAgricultureDetailsOperationCompleted(object arg) {
            if ((this.FnInsterAgricultureDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsterAgricultureDetailsCompleted(this, new FnInsterAgricultureDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateReport(string docNo) {
            object[] results = this.Invoke("FnGenerateReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateReportAsync(string docNo) {
            this.FnGenerateReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateReportAsync(string docNo, object userState) {
            if ((this.FnGenerateReportOperationCompleted == null)) {
                this.FnGenerateReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateReport", new object[] {
                        docNo}, this.FnGenerateReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateReportOperationCompleted(object arg) {
            if ((this.FnGenerateReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateReportCompleted(this, new FnGenerateReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:SendIndividualAgricultureApplicationA" +
            "pproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="SendIndividualAgricultureApplicationApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendIndividualAgricultureApplicationApproval(string docNo) {
            object[] results = this.Invoke("SendIndividualAgricultureApplicationApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendIndividualAgricultureApplicationApprovalAsync(string docNo) {
            this.SendIndividualAgricultureApplicationApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendIndividualAgricultureApplicationApprovalAsync(string docNo, object userState) {
            if ((this.SendIndividualAgricultureApplicationApprovalOperationCompleted == null)) {
                this.SendIndividualAgricultureApplicationApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendIndividualAgricultureApplicationApprovalOperationCompleted);
            }
            this.InvokeAsync("SendIndividualAgricultureApplicationApproval", new object[] {
                        docNo}, this.SendIndividualAgricultureApplicationApprovalOperationCompleted, userState);
        }
        
        private void OnSendIndividualAgricultureApplicationApprovalOperationCompleted(object arg) {
            if ((this.SendIndividualAgricultureApplicationApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendIndividualAgricultureApplicationApprovalCompleted(this, new SendIndividualAgricultureApplicationApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnewAgricultureCorpOnboadingRequests", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnewAgricultureCorpOnboadingRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnewAgricultureCorpOnboadingRequests(string docNo, string empNo, string cust_category, string cust_sub_category, string pinNo, string companyName, string countryOfResidence, string countyCode, string applicanttype, string residentialLocat, string officeLoc, int wealthSource, int incomeSource, string incorporationcert) {
            object[] results = this.Invoke("FnewAgricultureCorpOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        pinNo,
                        companyName,
                        countryOfResidence,
                        countyCode,
                        applicanttype,
                        residentialLocat,
                        officeLoc,
                        wealthSource,
                        incomeSource,
                        incorporationcert});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnewAgricultureCorpOnboadingRequestsAsync(string docNo, string empNo, string cust_category, string cust_sub_category, string pinNo, string companyName, string countryOfResidence, string countyCode, string applicanttype, string residentialLocat, string officeLoc, int wealthSource, int incomeSource, string incorporationcert) {
            this.FnewAgricultureCorpOnboadingRequestsAsync(docNo, empNo, cust_category, cust_sub_category, pinNo, companyName, countryOfResidence, countyCode, applicanttype, residentialLocat, officeLoc, wealthSource, incomeSource, incorporationcert, null);
        }
        
        /// <remarks/>
        public void FnewAgricultureCorpOnboadingRequestsAsync(string docNo, string empNo, string cust_category, string cust_sub_category, string pinNo, string companyName, string countryOfResidence, string countyCode, string applicanttype, string residentialLocat, string officeLoc, int wealthSource, int incomeSource, string incorporationcert, object userState) {
            if ((this.FnewAgricultureCorpOnboadingRequestsOperationCompleted == null)) {
                this.FnewAgricultureCorpOnboadingRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnewAgricultureCorpOnboadingRequestsOperationCompleted);
            }
            this.InvokeAsync("FnewAgricultureCorpOnboadingRequests", new object[] {
                        docNo,
                        empNo,
                        cust_category,
                        cust_sub_category,
                        pinNo,
                        companyName,
                        countryOfResidence,
                        countyCode,
                        applicanttype,
                        residentialLocat,
                        officeLoc,
                        wealthSource,
                        incomeSource,
                        incorporationcert}, this.FnewAgricultureCorpOnboadingRequestsOperationCompleted, userState);
        }
        
        private void OnFnewAgricultureCorpOnboadingRequestsOperationCompleted(object arg) {
            if ((this.FnewAgricultureCorpOnboadingRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnewAgricultureCorpOnboadingRequestsCompleted(this, new FnewAgricultureCorpOnboadingRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGetServiceContractsAgriculture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGetServiceContractsAgriculture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetServiceContractsAgriculture(string branchName, string profileType) {
            object[] results = this.Invoke("FnGetServiceContractsAgriculture", new object[] {
                        branchName,
                        profileType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetServiceContractsAgricultureAsync(string branchName, string profileType) {
            this.FnGetServiceContractsAgricultureAsync(branchName, profileType, null);
        }
        
        /// <remarks/>
        public void FnGetServiceContractsAgricultureAsync(string branchName, string profileType, object userState) {
            if ((this.FnGetServiceContractsAgricultureOperationCompleted == null)) {
                this.FnGetServiceContractsAgricultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetServiceContractsAgricultureOperationCompleted);
            }
            this.InvokeAsync("FnGetServiceContractsAgriculture", new object[] {
                        branchName,
                        profileType}, this.FnGetServiceContractsAgricultureOperationCompleted, userState);
        }
        
        private void OnFnGetServiceContractsAgricultureOperationCompleted(object arg) {
            if ((this.FnGetServiceContractsAgricultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetServiceContractsAgricultureCompleted(this, new FnGetServiceContractsAgricultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnNewPolicyAmmendmentsIndAgric", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnNewPolicyAmmendmentsIndAgric_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPolicyAmmendmentsIndAgric(string contractNumber) {
            object[] results = this.Invoke("FnNewPolicyAmmendmentsIndAgric", new object[] {
                        contractNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentsIndAgricAsync(string contractNumber) {
            this.FnNewPolicyAmmendmentsIndAgricAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void FnNewPolicyAmmendmentsIndAgricAsync(string contractNumber, object userState) {
            if ((this.FnNewPolicyAmmendmentsIndAgricOperationCompleted == null)) {
                this.FnNewPolicyAmmendmentsIndAgricOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPolicyAmmendmentsIndAgricOperationCompleted);
            }
            this.InvokeAsync("FnNewPolicyAmmendmentsIndAgric", new object[] {
                        contractNumber}, this.FnNewPolicyAmmendmentsIndAgricOperationCompleted, userState);
        }
        
        private void OnFnNewPolicyAmmendmentsIndAgricOperationCompleted(object arg) {
            if ((this.FnNewPolicyAmmendmentsIndAgricCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPolicyAmmendmentsIndAgricCompleted(this, new FnNewPolicyAmmendmentsIndAgricCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnAmmendCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnAmmendCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAmmendCommunicationDetails(string contractNumber, string telephone1, string city, string address, string poscode, string email) {
            object[] results = this.Invoke("FnAmmendCommunicationDetails", new object[] {
                        contractNumber,
                        telephone1,
                        city,
                        address,
                        poscode,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAmmendCommunicationDetailsAsync(string contractNumber, string telephone1, string city, string address, string poscode, string email) {
            this.FnAmmendCommunicationDetailsAsync(contractNumber, telephone1, city, address, poscode, email, null);
        }
        
        /// <remarks/>
        public void FnAmmendCommunicationDetailsAsync(string contractNumber, string telephone1, string city, string address, string poscode, string email, object userState) {
            if ((this.FnAmmendCommunicationDetailsOperationCompleted == null)) {
                this.FnAmmendCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAmmendCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnAmmendCommunicationDetails", new object[] {
                        contractNumber,
                        telephone1,
                        city,
                        address,
                        poscode,
                        email}, this.FnAmmendCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnFnAmmendCommunicationDetailsOperationCompleted(object arg) {
            if ((this.FnAmmendCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAmmendCommunicationDetailsCompleted(this, new FnAmmendCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateAgentsRegReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateAgentsRegReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAgentsRegReport(string empNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime documentDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("FnGenerateAgentsRegReport", new object[] {
                        empNo,
                        documentDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAgentsRegReportAsync(string empNo, System.DateTime documentDate, System.DateTime endDate) {
            this.FnGenerateAgentsRegReportAsync(empNo, documentDate, endDate, null);
        }
        
        /// <remarks/>
        public void FnGenerateAgentsRegReportAsync(string empNo, System.DateTime documentDate, System.DateTime endDate, object userState) {
            if ((this.FnGenerateAgentsRegReportOperationCompleted == null)) {
                this.FnGenerateAgentsRegReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAgentsRegReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAgentsRegReport", new object[] {
                        empNo,
                        documentDate,
                        endDate}, this.FnGenerateAgentsRegReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAgentsRegReportOperationCompleted(object arg) {
            if ((this.FnGenerateAgentsRegReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAgentsRegReportCompleted(this, new FnGenerateAgentsRegReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateKYMNewApkReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateKYMNewApkReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateKYMNewApkReport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime documentDate, string factoryName, string agentCode) {
            object[] results = this.Invoke("FnGenerateKYMNewApkReport", new object[] {
                        documentDate,
                        factoryName,
                        agentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateKYMNewApkReportAsync(System.DateTime documentDate, string factoryName, string agentCode) {
            this.FnGenerateKYMNewApkReportAsync(documentDate, factoryName, agentCode, null);
        }
        
        /// <remarks/>
        public void FnGenerateKYMNewApkReportAsync(System.DateTime documentDate, string factoryName, string agentCode, object userState) {
            if ((this.FnGenerateKYMNewApkReportOperationCompleted == null)) {
                this.FnGenerateKYMNewApkReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateKYMNewApkReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateKYMNewApkReport", new object[] {
                        documentDate,
                        factoryName,
                        agentCode}, this.FnGenerateKYMNewApkReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateKYMNewApkReportOperationCompleted(object arg) {
            if ((this.FnGenerateKYMNewApkReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateKYMNewApkReportCompleted(this, new FnGenerateKYMNewApkReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateUpgradeReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateUpgradeReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateUpgradeReport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string factoryName, string agentCode) {
            object[] results = this.Invoke("FnGenerateUpgradeReport", new object[] {
                        startDate,
                        factoryName,
                        agentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateUpgradeReportAsync(System.DateTime startDate, string factoryName, string agentCode) {
            this.FnGenerateUpgradeReportAsync(startDate, factoryName, agentCode, null);
        }
        
        /// <remarks/>
        public void FnGenerateUpgradeReportAsync(System.DateTime startDate, string factoryName, string agentCode, object userState) {
            if ((this.FnGenerateUpgradeReportOperationCompleted == null)) {
                this.FnGenerateUpgradeReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateUpgradeReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateUpgradeReport", new object[] {
                        startDate,
                        factoryName,
                        agentCode}, this.FnGenerateUpgradeReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateUpgradeReportOperationCompleted(object arg) {
            if ((this.FnGenerateUpgradeReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateUpgradeReportCompleted(this, new FnGenerateUpgradeReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGeneratClaimReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGeneratClaimReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratClaimReport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, string factoryName, string agentCode) {
            object[] results = this.Invoke("FnGeneratClaimReport", new object[] {
                        startDate,
                        factoryName,
                        agentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratClaimReportAsync(System.DateTime startDate, string factoryName, string agentCode) {
            this.FnGeneratClaimReportAsync(startDate, factoryName, agentCode, null);
        }
        
        /// <remarks/>
        public void FnGeneratClaimReportAsync(System.DateTime startDate, string factoryName, string agentCode, object userState) {
            if ((this.FnGeneratClaimReportOperationCompleted == null)) {
                this.FnGeneratClaimReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratClaimReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratClaimReport", new object[] {
                        startDate,
                        factoryName,
                        agentCode}, this.FnGeneratClaimReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratClaimReportOperationCompleted(object arg) {
            if ((this.FnGeneratClaimReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratClaimReportCompleted(this, new FnGeneratClaimReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateCertificate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateCertificate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCertificate(string customerNo, string debitNo) {
            object[] results = this.Invoke("FnGenerateCertificate", new object[] {
                        customerNo,
                        debitNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCertificateAsync(string customerNo, string debitNo) {
            this.FnGenerateCertificateAsync(customerNo, debitNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCertificateAsync(string customerNo, string debitNo, object userState) {
            if ((this.FnGenerateCertificateOperationCompleted == null)) {
                this.FnGenerateCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCertificateOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCertificate", new object[] {
                        customerNo,
                        debitNo}, this.FnGenerateCertificateOperationCompleted, userState);
        }
        
        private void OnFnGenerateCertificateOperationCompleted(object arg) {
            if ((this.FnGenerateCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCertificateCompleted(this, new FnGenerateCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/KYM:FnGenerateClientCertificate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", ResponseElementName="FnGenerateClientCertificate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/KYM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateClientCertificate(string clientNo) {
            object[] results = this.Invoke("FnGenerateClientCertificate", new object[] {
                        clientNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateClientCertificateAsync(string clientNo) {
            this.FnGenerateClientCertificateAsync(clientNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateClientCertificateAsync(string clientNo, object userState) {
            if ((this.FnGenerateClientCertificateOperationCompleted == null)) {
                this.FnGenerateClientCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateClientCertificateOperationCompleted);
            }
            this.InvokeAsync("FnGenerateClientCertificate", new object[] {
                        clientNo}, this.FnGenerateClientCertificateOperationCompleted, userState);
        }
        
        private void OnFnGenerateClientCertificateOperationCompleted(object arg) {
            if ((this.FnGenerateClientCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateClientCertificateCompleted(this, new FnGenerateClientCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewClientOnboadingRequestsCompletedEventHandler(object sender, NewClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewClientOnboadingRequestsCompletedEventHandler(object sender, FnewClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewMotorClientOnboadingRequestsCompletedEventHandler(object sender, FnewMotorClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewMotorClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewMotorClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewClientApplicationsCommunicationDetailsCompletedEventHandler(object sender, FnewClientApplicationsCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewClientApplicationsCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewClientApplicationsCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NewCorporateClientOnboadingRequestsCompletedEventHandler(object sender, NewCorporateClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCorporateClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewCorporateClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewCorporateClientOnboadingRequestsCompletedEventHandler(object sender, FnewCorporateClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewCorporateClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewCorporateClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewMotorCorporateClientOnboadingRequestsCompletedEventHandler(object sender, FnewMotorCorporateClientOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewMotorCorporateClientOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewMotorCorporateClientOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateClientDependantsCompletedEventHandler(object sender, CreateClientDependantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClientDependantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClientDependantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPolicyAmmendmentscreCreateClientDependantsCompletedEventHandler(object sender, FnPolicyAmmendmentscreCreateClientDependantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPolicyAmmendmentscreCreateClientDependantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPolicyAmmendmentscreCreateClientDependantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatePolicyDependantsCompletedEventHandler(object sender, FnCreatePolicyDependantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatePolicyDependantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatePolicyDependantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateClientBeneficiaryCompletedEventHandler(object sender, CreateClientBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClientBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClientBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventHandler(object sender, FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPolicyAmmendmentsCreateClientBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ValidateClientBeneficiaryCompletedEventHandler(object sender, ValidateClientBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateClientBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateClientBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventHandler(object sender, FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnValidateClientBeneficiaryPolicyAmmendmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreatePolicytBeneficiaryCompletedEventHandler(object sender, FnCreatePolicytBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreatePolicytBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreatePolicytBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePolicyDetailsCompletedEventHandler(object sender, UpdatePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnupdatePolicyDetailsCompletedEventHandler(object sender, FnupdatePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnupdatePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnupdatePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnIndividualupdatePolicyDetailsCompletedEventHandler(object sender, FnIndividualupdatePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIndividualupdatePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIndividualupdatePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnIndividualMotorupdatePolicyDetailsCompletedEventHandler(object sender, FnIndividualMotorupdatePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIndividualMotorupdatePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIndividualMotorupdatePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventHandler(object sender, FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIndividualMotorupdatePolicyAmmendmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendClientApplicationForApprovalCompletedEventHandler(object sender, SendClientApplicationForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendClientApplicationForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendClientApplicationForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateClaimNotificationCompletedEventHandler(object sender, CreateClaimNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClaimNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClaimNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FncreateClaimNotificationCompletedEventHandler(object sender, FncreateClaimNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FncreateClaimNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FncreateClaimNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushClaimNotificationForValidationCompletedEventHandler(object sender, PushClaimNotificationForValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushClaimNotificationForValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushClaimNotificationForValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushMotorClaimNotificationForValidationCompletedEventHandler(object sender, PushMotorClaimNotificationForValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushMotorClaimNotificationForValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushMotorClaimNotificationForValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMicroInsurancePolicyCompletedEventHandler(object sender, FnNewMicroInsurancePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMicroInsurancePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMicroInsurancePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushAmmendmentsClaimNotificationForValidationCompletedEventHandler(object sender, PushAmmendmentsClaimNotificationForValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushAmmendmentsClaimNotificationForValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushAmmendmentsClaimNotificationForValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPolicyAmmendmentCompletedEventHandler(object sender, FnNewPolicyAmmendmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPolicyAmmendmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPolicyAmmendmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorPolicyAmmendmentCompletedEventHandler(object sender, FnNewMotorPolicyAmmendmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorPolicyAmmendmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorPolicyAmmendmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorPolicyRieskDetailsCompletedEventHandler(object sender, FnNewMotorPolicyRieskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorPolicyRieskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorPolicyRieskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorIndividualPolicyRiskDetailsCompletedEventHandler(object sender, FnNewMotorIndividualPolicyRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorIndividualPolicyRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorIndividualPolicyRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnExistingMicroInsuranceDetailsCompletedEventHandler(object sender, FnExistingMicroInsuranceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnExistingMicroInsuranceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnExistingMicroInsuranceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnExistingMicroInsuranceBeneficiaryCompletedEventHandler(object sender, FnExistingMicroInsuranceBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnExistingMicroInsuranceBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnExistingMicroInsuranceBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnExistingMotorUnderWritingDetailsCompletedEventHandler(object sender, FnExistingMotorUnderWritingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnExistingMotorUnderWritingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnExistingMotorUnderWritingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AppSendStatementCompletedEventHandler(object sender, AppSendStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppSendStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppSendStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PromotetoBeneficiaryCompletedEventHandler(object sender, PromotetoBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PromotetoBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PromotetoBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PromotetoBeneficiaryPolicyAmmendmentsCompletedEventHandler(object sender, PromotetoBeneficiaryPolicyAmmendmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PromotetoBeneficiaryPolicyAmmendmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PromotetoBeneficiaryPolicyAmmendmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClientPolicyAmendmentsBeneficiaryCompletedEventHandler(object sender, DeleteClientPolicyAmendmentsBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientPolicyAmendmentsBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientPolicyAmendmentsBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClientBeneficiaryCompletedEventHandler(object sender, DeleteClientBeneficiaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientBeneficiaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientBeneficiaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClientRiskDetailsCompletedEventHandler(object sender, DeleteClientRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClientDependantCompletedEventHandler(object sender, DeleteClientDependantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientDependantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientDependantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteClientPolicyAmendmentssDependantCompletedEventHandler(object sender, DeleteClientPolicyAmendmentssDependantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientPolicyAmendmentssDependantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientPolicyAmendmentssDependantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendIndividualClientApplicationApprovalCompletedEventHandler(object sender, SendIndividualClientApplicationApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendIndividualClientApplicationApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendIndividualClientApplicationApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendIndividualKYMPolicyAmmendmentApprovalCompletedEventHandler(object sender, SendIndividualKYMPolicyAmmendmentApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendIndividualKYMPolicyAmmendmentApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendIndividualKYMPolicyAmmendmentApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewBCCAgentDetailsCompletedEventHandler(object sender, FnNewBCCAgentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewBCCAgentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewBCCAgentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateAgentDetailsCompletedEventHandler(object sender, FnCreateAgentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateAgentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateAgentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetFactoryCodeCompletedEventHandler(object sender, FnGetFactoryCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetFactoryCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetFactoryCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetFactoryNameCompletedEventHandler(object sender, FnGetFactoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetFactoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetFactoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddPrincipalMemberConditionsCompletedEventHandler(object sender, FnAddPrincipalMemberConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddPrincipalMemberConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddPrincipalMemberConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddDependantConditionsCompletedEventHandler(object sender, FnAddDependantConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDependantConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDependantConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveDependantConditionsCompletedEventHandler(object sender, RemoveDependantConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveDependantConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveDependantConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInsuranceOptionalBenefitsCompletedEventHandler(object sender, FnAddInsuranceOptionalBenefitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInsuranceOptionalBenefitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInsuranceOptionalBenefitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInsuranceExistingOptionalBenefitsCompletedEventHandler(object sender, FnAddInsuranceExistingOptionalBenefitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInsuranceExistingOptionalBenefitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInsuranceExistingOptionalBenefitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCheckifGrowerNoExistCompletedEventHandler(object sender, FnCheckifGrowerNoExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckifGrowerNoExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckifGrowerNoExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCheckifIdentityNoExistCompletedEventHandler(object sender, FnCheckifIdentityNoExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckifIdentityNoExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckifIdentityNoExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCheckifICertifcateNumberExistCompletedEventHandler(object sender, FnCheckifICertifcateNumberExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckifICertifcateNumberExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckifICertifcateNumberExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPolicyEndDateCompletedEventHandler(object sender, FnGetPolicyEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPolicyEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPolicyEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPolicyCalenderDaysCompletedEventHandler(object sender, FnGetPolicyCalenderDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPolicyCalenderDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPolicyCalenderDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPolicyAmmendmentsDetailsCompletedEventHandler(object sender, FnPolicyAmmendmentsDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPolicyAmmendmentsDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPolicyAmmendmentsDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateClaimValidationCompletedEventHandler(object sender, FnCreateClaimValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateClaimValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateClaimValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPolicyAmmendmentscorporateCompletedEventHandler(object sender, FnNewPolicyAmmendmentscorporateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPolicyAmmendmentscorporateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPolicyAmmendmentscorporateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPolicyAmmendmentsCompletedEventHandler(object sender, FnNewPolicyAmmendmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPolicyAmmendmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPolicyAmmendmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDocumentsValidationsCompletedEventHandler(object sender, FnDocumentsValidationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDocumentsValidationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDocumentsValidationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnPolicyAmmendmentsUpdatesCompletedEventHandler(object sender, FnPolicyAmmendmentsUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPolicyAmmendmentsUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPolicyAmmendmentsUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorPolicyAmmendmentsCompletedEventHandler(object sender, FnNewMotorPolicyAmmendmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorPolicyAmmendmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorPolicyAmmendmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorIndividualPolicyRenewalsCompletedEventHandler(object sender, FnNewMotorIndividualPolicyRenewalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorIndividualPolicyRenewalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorIndividualPolicyRenewalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventHandler(object sender, FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewQuoteMotorIndividualPolicyRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventHandler(object sender, FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewQuoteMotorExistingIndividualPolicyRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdateMotorIndividualPolicySumInsuredCompletedEventHandler(object sender, FnUpdateMotorIndividualPolicySumInsuredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateMotorIndividualPolicySumInsuredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateMotorIndividualPolicySumInsuredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteQuoteRiskDetailsCompletedEventHandler(object sender, DeleteQuoteRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQuoteRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQuoteRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventHandler(object sender, FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddMotorAmmendmentsInsuranceOptionalBenefitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateMotorClaimNotificationCompletedEventHandler(object sender, FnCreateMotorClaimNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateMotorClaimNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateMotorClaimNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateClaimMotorValidationCompletedEventHandler(object sender, FnCreateClaimMotorValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateClaimMotorValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateClaimMotorValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventHandler(object sender, SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMotorAmmendmentIndividualClientApplicationApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMotoRenewalIndividualClientApplicationApprovalCompletedEventHandler(object sender, SendMotoRenewalIndividualClientApplicationApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMotoRenewalIndividualClientApplicationApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMotoRenewalIndividualClientApplicationApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewMotorPolicyExistingBusinessCompletedEventHandler(object sender, FnNewMotorPolicyExistingBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewMotorPolicyExistingBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewMotorPolicyExistingBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnIndividualMotorupdatePolicyExistingDetailsCompletedEventHandler(object sender, FnIndividualMotorupdatePolicyExistingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIndividualMotorupdatePolicyExistingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIndividualMotorupdatePolicyExistingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnMotorPolicyAmmendmentsUpdatesCompletedEventHandler(object sender, FnMotorPolicyAmmendmentsUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMotorPolicyAmmendmentsUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMotorPolicyAmmendmentsUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventHandler(object sender, FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMotorPolicyAmmendmentsContactsUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeactivateQuoteRiskDetailsCompletedEventHandler(object sender, DeactivateQuoteRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeactivateQuoteRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeactivateQuoteRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateDebitNoteCompletedEventHandler(object sender, GenerateDebitNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDebitNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDebitNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateRiskNoteCompletedEventHandler(object sender, GenerateRiskNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRiskNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRiskNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetBasicPremiumCompletedEventHandler(object sender, FnGetBasicPremiumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetBasicPremiumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetBasicPremiumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetBasicPremiumQuotesCompletedEventHandler(object sender, FnGetBasicPremiumQuotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetBasicPremiumQuotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetBasicPremiumQuotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnKYMWithdrawalCompletedEventHandler(object sender, FnKYMWithdrawalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnKYMWithdrawalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnKYMWithdrawalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnMotorGeneralDetailsExtensionCompletedEventHandler(object sender, FnMotorGeneralDetailsExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMotorGeneralDetailsExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMotorGeneralDetailsExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnMotorExtensionVehicleDetailsCompletedEventHandler(object sender, FnMotorExtensionVehicleDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMotorExtensionVehicleDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMotorExtensionVehicleDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnTransferRiskDetailsCompletedEventHandler(object sender, FnTransferRiskDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTransferRiskDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTransferRiskDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendIndividualMotorAmmendmentApprovalCompletedEventHandler(object sender, SendIndividualMotorAmmendmentApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendIndividualMotorAmmendmentApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendIndividualMotorAmmendmentApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCustomersListCompletedEventHandler(object sender, FnGetCustomersListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCustomersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCustomersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCustomerListCompletedEventHandler(object sender, FnCustomerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetServiceContractsCompletedEventHandler(object sender, FnGetServiceContractsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetServiceContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetServiceContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetKTDAFarmersCompletedEventHandler(object sender, FnGetKTDAFarmersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetKTDAFarmersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetKTDAFarmersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnComputeKymPremiumCompletedEventHandler(object sender, FnComputeKymPremiumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnComputeKymPremiumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnComputeKymPremiumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPrinciplePhotoCompletedEventHandler(object sender, FnInsertPrinciplePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPrinciplePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPrinciplePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertDependentPhotoCompletedEventHandler(object sender, FnInsertDependentPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertDependentPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertDependentPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewAgricultureOnboadingRequestsCompletedEventHandler(object sender, FnewAgricultureOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewAgricultureOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewAgricultureOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnIndividualupdateAgriculturePolicyDetailsCompletedEventHandler(object sender, FnIndividualupdateAgriculturePolicyDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnIndividualupdateAgriculturePolicyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnIndividualupdateAgriculturePolicyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsterAgricultureDetailsCompletedEventHandler(object sender, FnInsterAgricultureDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsterAgricultureDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsterAgricultureDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateReportCompletedEventHandler(object sender, FnGenerateReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendIndividualAgricultureApplicationApprovalCompletedEventHandler(object sender, SendIndividualAgricultureApplicationApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendIndividualAgricultureApplicationApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendIndividualAgricultureApplicationApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnewAgricultureCorpOnboadingRequestsCompletedEventHandler(object sender, FnewAgricultureCorpOnboadingRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnewAgricultureCorpOnboadingRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnewAgricultureCorpOnboadingRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetServiceContractsAgricultureCompletedEventHandler(object sender, FnGetServiceContractsAgricultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetServiceContractsAgricultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetServiceContractsAgricultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPolicyAmmendmentsIndAgricCompletedEventHandler(object sender, FnNewPolicyAmmendmentsIndAgricCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPolicyAmmendmentsIndAgricCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPolicyAmmendmentsIndAgricCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAmmendCommunicationDetailsCompletedEventHandler(object sender, FnAmmendCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAmmendCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAmmendCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateAgentsRegReportCompletedEventHandler(object sender, FnGenerateAgentsRegReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAgentsRegReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAgentsRegReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateKYMNewApkReportCompletedEventHandler(object sender, FnGenerateKYMNewApkReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateKYMNewApkReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateKYMNewApkReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateUpgradeReportCompletedEventHandler(object sender, FnGenerateUpgradeReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateUpgradeReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateUpgradeReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratClaimReportCompletedEventHandler(object sender, FnGeneratClaimReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratClaimReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratClaimReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCertificateCompletedEventHandler(object sender, FnGenerateCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateClientCertificateCompletedEventHandler(object sender, FnGenerateClientCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateClientCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateClientCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591